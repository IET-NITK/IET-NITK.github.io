{"version":3,"sources":["webpack://ietnitk/./src/components/helper.js","webpack://ietnitk/./src/templates/author-page.js"],"names":["RenderAuthors","arr","cls","map","index2","name","key","to","toLowerCase","split","join","length","newRenderAuthors","niceFormat","replace","letter","toUpperCase","RenderArticles","articles","element","index","className","style","paddingBottom","route","title","authors","birthTime","excerpt","RenderProject","description","SIG","year","ongoing","label","sig","url","data","location","member_details","member_projects","member_articles","pathname","class","image","src","URL","searchParams","get","alt","position","social","email","placement","delay","show","hide","overlay","props","facebook","target","rel","href","linkedin","github","nodes","e","i"],"mappings":"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","file":"component---src-templates-author-page-js-b369b34180d8283e9158.js","sourcesContent":["import { Link } from \"gatsby\"\nimport React from \"react\"\n\nexport const redirectController = control => {\n  if (!control) {\n  }\n}\nexport const generateSIGHash = sig_images => {\n  let img_hash = {}\n  sig_images &&\n    sig_images.forEach(element => {\n      img_hash[element.name] = element.childImageSharp.fixed.srcWebp\n    })\n  return img_hash\n}\n\nexport const RenderAuthors = (arr, cls) =>\n  arr.map(({ name }, index2) => (\n    <>\n      &nbsp;\n      <Link\n        key={\"x\" + index2}\n        to={\"/members/\" + name.toLowerCase().split(\" \").join(\"\")}\n      >\n        {name}\n      </Link>\n      {index2 + 2 === arr.length\n        ? \" and\"\n        : index2 + 1 !== arr.length\n        ? \",\"\n        : \"\"}\n    </>\n  ))\n\nexport const newRenderAuthors = (arr, cls) =>\n  arr.map(({ name }, index2) => (\n    <>\n      &nbsp;\n      <Link\n        key={\"x\" + index2}\n        to={\"/members/\" + name.toLowerCase().split(\" \").join(\"\")}\n      >\n        {name}\n      </Link>\n      {index2 + 2 === arr.length\n        ? \" and\"\n        : index2 + 1 !== arr.length\n        ? \",\"\n        : \"\"}\n    </>\n  ))\n\nexport const niceFormat = name =>\n  name.toLowerCase().replace(/^\\w|\\s\\w/g, function (letter) {\n    return letter.toUpperCase()\n  })\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SearchEngineOps from \"../components/seo\"\nimport { graphql, Link } from \"gatsby\"\nimport { RenderAuthors } from \"../components/helper\"\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\"\n\n\nconst RenderArticles = ({ articles, element, index }) => (\n  <div\n    key={index}\n    className=\"clean-blog-post\"\n    style={{ paddingBottom: \"35px\" }}\n  >\n    <div className=\"row\">\n      <div className=\"col-lg-12\">\n        <h3>\n          <Link className=\"btn-link\" to={\"/blog/\" + element.route}>\n            {element.title}\n          </Link>\n        </h3>\n        <div className=\"info\">\n          <span className=\"text-muted\">\n            By\n            {RenderAuthors(element.authors, \"\")}\n            <br />\n            {element.birthTime}\n          </span>\n        </div>\n        <p> {element.excerpt} </p>\n      </div>\n    </div>\n  </div>\n)\n\nconst RenderProject = ({\n  title,\n  SIG,\n  description,\n  authors,\n  ongoing,\n  year,\n  label,\n  sig,\n  url,\n}) => {\n  return (\n    <div className=\"clean-blog-post\" style={{ paddingBottom: \"35px\" }}>\n      <div className=\"row\">\n        <div className=\"col-lg-12\">\n          <h3>\n            {url ? (\n              <Link to={\"/projects/\" + title.toLowerCase().split(\" \").join(\"\")}>\n                {title} {year ? `(${year})` : null}\n              </Link>\n            ) : (\n              <>\n                {title} {year ? `(${year})` : null}\n              </>\n            )}\n          </h3>\n          {label ? (\n            <div className=\"badge badge-primary mr-2\">{label}</div>\n          ) : null}\n          {sig ? (\n            <Link\n              to={\"/sigs/\" + sig.name.toLowerCase()}\n              className=\"badge badge-info text-uppercase\"\n            >\n              {sig.name}\n            </Link>\n          ) : null}\n          <div className=\"info\">\n            <span className=\"text-muted\">\n              By\n              {RenderAuthors(authors, \"\")}\n            </span>\n          </div>\n          <p> {description} </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst Author = ({ data, location }) => {\n  const {\n    member_details,\n    member_projects,\n    member_articles\n  } = data\n\n  return (\n    <Layout location={location.pathname}>\n      <SearchEngineOps title={\"About \" + member_details.name} />\n      <main className=\"page blog-post-list\">\n        <section className=\"clean-block clean-blog-list dark\">\n          <div className=\"container-fluid\">\n            <div className=\"block-content\">\n              <div className=\"row\">\n                <div className=\"col-lg-3 col-md-3 col-sm-12\">\n                  <div className=\"card\">\n                    <div className=\"card-body\">\n                      <div className=\"text-center mt-4\">\n                        <div class=\"text-center\">\n                          {member_details.image ? (\n                            <img\n                              src={`https://drive.google.com/thumbnail?id=${new URL(\n                                member_details.image\n                              ).searchParams.get(\"id\")}`}\n                              class=\"img-fluid rounded  mb-5\"\n                              alt={member_details.name}\n                            />\n                          ) : null}\n                        </div>\n                        <h5 className=\"text-primary\">{member_details.name}</h5>\n                        <h6>{member_details.position}</h6>\n                        <p>\n                          {member_details.social &&\n                          member_details.social.email ? (\n                            <OverlayTrigger\n                              placement=\"bottom\"\n                              delay={{ show: 250, hide: 400 }}\n                              overlay={props => (\n                                <Tooltip {...props}>\n                                  {member_details.social.email\n                                    .replace(\"@\", \" [at] \")\n                                    .split(\".\")\n                                    .join(\" [dot] \")}\n                                </Tooltip>\n                              )}\n                            >\n                              <i className=\"fa fa-envelope text-primary\" />\n                            </OverlayTrigger>\n                          ) : null}\n                          {member_details.social &&\n                          member_details.social.facebook ? (\n                            <a\n                              target=\"_blank\"\n                              rel=\"noreferrer\"\n                              className=\"mr-1 ml-1\"\n                              href={`https://www.facebook.com/${member_details.social.facebook}`}\n                            >\n                              &nbsp;\n                              <i className=\"fa fa-facebook\" />\n                            </a>\n                          ) : null}\n                          {member_details.social &&\n                          member_details.social.linkedin ? (\n                            <a\n                              target=\"_blank\"\n                              rel=\"noreferrer\"\n                              className=\"mr-1 ml-1\"\n                              href={`https://www.linkedin.com/in/${member_details.social.linkedin}`}\n                            >\n                              &nbsp;\n                              <i className=\"fa fa-linkedin\" />\n                            </a>\n                          ) : null}\n                          {member_details.social &&\n                          member_details.social.github ? (\n                            <a\n                              target=\"_blank\"\n                              rel=\"noreferrer\"\n                              className=\"mr-1 ml-1\"\n                              href={`https://www.github.com/${member_details.social.github}`}\n                            >\n                              &nbsp;\n                              <i className=\"fa fa-github\" />\n                            </a>\n                          ) : null}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-lg-9 col-md-9 col-sm-12\">\n                  <div\n                    className=\"card clean-blog-post mb-3\"\n                    style={{ paddingBottom: \"10px\" }}\n                  >\n                    <div className=\"card-body\">\n                      <div className=\"card-title\">\n                        <h4>Projects</h4>\n                      </div>\n                      {member_projects.nodes.map((e, i) => (\n                        <RenderProject {...e} />\n                      ))}\n                    </div>\n                  </div>\n                  <div\n                    className=\"card clean-blog-post mb-3\"\n                    style={{ paddingBottom: \"10px\" }}\n                  >\n                    <div className=\"card-body\">\n                      <div className=\"card-title\">\n                        <h4>Blog Articles</h4>\n                      </div>\n                      {member_articles.nodes.map((e, i) => (\n                        <RenderArticles element={e} index={i} />\n                      ))}\n                    </div>\n                  </div>\n\n                  <div\n                    className=\"card clean-blog-post mb-3\"\n                    style={{ paddingBottom: \"10px\" }}\n                  >\n                    <div className=\"card-body\">\n                      <div className=\"card-title\">\n                        <h4>Project Reports</h4>\n                      </div>\n                      {/* {member_reports.nodes.map((e, i) => (\n                        <RenderArticles element={e} index={i} />\n                      ))} */}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </main>\n    </Layout>\n  )\n}\n\nexport const postQuery = graphql`\n  query($pathSlug: String) {\n    member_details: strapiMembers(name: { in: [$pathSlug] }) {\n      name\n      position\n      image\n      passoutYr\n      contacts {\n        email\n        facebook\n        github\n        linkedin\n      }\n    }\n    member_projects: allStrapiProjects(\n      filter: { authors: { elemMatch: { name: { in: [$pathSlug] } } } }\n    ) {\n      nodes {\n        title\n        description\n        sig {\n          name\n        }\n        url\n        authors {\n          name\n        }\n      }\n    }\n    member_articles: allStrapiBlogs(\n      sort: {fields: date, order: DESC}\n      filter: {authors: {elemMatch: {name: {in: [$pathSlug]}}}}\n    ) {\n      nodes {\n        title\n        authors {\n          name\n        }\n        excerpt\n        date(formatString: \"MMMM Do, YYYY\")\n        route\n      }\n    }\n  }\n`\nexport default Author\n"],"sourceRoot":""}