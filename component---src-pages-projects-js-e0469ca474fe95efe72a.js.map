{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./src/components/partials/pagination.js","webpack:///./src/components/helper.js"],"names":["Events","data","location","pathname","title","className","max","list","projects","nodes","item","element","index","key","sig","description","builtBy","RenderAuthors","URL","to","toLowerCase","split","join","type","scrollTop","document","body","documentElement","PaginationComponent","noneMessage","useState","pno","state","setState","length","slice","map","aria-label","onClick","Array","Math","ceil","e","i","data-toggle","generateSIGHash","sig_images","img_hash","forEach","name","childImageSharp","fixed","srcWebp","arr","cls","index2"],"mappings":"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","file":"component---src-pages-projects-js-e0469ca474fe95efe72a.js","sourcesContent":["import { graphql, Link } from \"gatsby\"\nimport React from \"react\"\nimport { RenderAuthors } from \"../components/helper\"\nimport Layout from \"../components/layout\"\nimport PaginationComponent from \"../components/partials/pagination\"\nimport SEO from \"../components/seo\"\n\nconst Events = ({ data, location }) => {\n  return (\n    <Layout location={location.pathname} title={\"Main\"}>\n      <SEO title=\"Projects\" />\n      <main className=\"page blog-post-list\">\n        <section className=\"clean-block clean-blog-list dark\">\n          <div className=\"container\">\n            <div className=\"block-heading\">\n              <h2 className=\"text-primary\">Projects @ IET NITK</h2>\n              <p>\n                We do many projects throughtout the year, here's a glimpse of it\n                all\n              </p>\n            </div>\n            <div className=\"block-content\">\n              {/* <div className=\"card mb-4\">\n                <div className=\"card-body\">Cipher Rovisp Torsion</div>\n              </div> */}\n              <PaginationComponent\n                max={10}\n                list={data.projects.nodes}\n                item={(element, index) => (\n                  <div key={index} className=\"clean-blog-post\">\n                    <h3 className=\"text-capitalize\">{element.title}</h3>\n                    <div className=\"info\">\n                      <span className=\"text-muted\">{element.sig}</span>\n                    </div>\n                    <p>\n                      {element.description || \"\"}\n                      {element.builtBy ? (\n                        <p>\n                          Built by\n                          {RenderAuthors(element.builtBy || [], \"\")}\n                        </p>\n                      ) : null}\n                    </p>\n                    {element.URL ? (\n                      <Link\n                        to={\n                          \"/projects/\" +\n                          element.title.toLowerCase().split(\" \").join(\"\")\n                        }\n                        className=\"btn btn-outline-primary btn-sm\"\n                        type=\"button\"\n                      >\n                        Read More\n                      </Link>\n                    ) : null}\n                  </div>\n                )}\n              />\n            </div>\n          </div>\n        </section>\n      </main>\n    </Layout>\n  )\n}\n\nexport const postQuery = graphql`\n  {\n    projects: allProjectsYaml(\n      filter: { builtBy: {} }\n      sort: { fields: builtBy }\n    ) {\n      nodes {\n        title\n        description\n        sig\n        builtBy\n        URL\n      }\n    }\n  }\n`\n\nexport default Events\n","import React, { useState } from \"react\"\n\nfunction scrollTop() {\n  if (document.body.scrollTop !== 0) {\n    document.body.scrollTop = 0\n  } else {\n    document.documentElement.scrollTop = 0\n  }\n}\nconst PaginationComponent = ({ max, list, item, noneMessage }) => {\n  const [state, setState] = useState({\n    pno: 1,\n  })\n  if (list.length === 0) {\n    return <div className=\"text-center\">{noneMessage}</div>\n  }\n\n  return (\n    <>\n      {state.pno !== 1 ? (\n        <>\n          <h6 className=\"text-primary\">Page {state.pno}</h6>\n          <hr />\n          <br />\n        </>\n      ) : null}\n\n      {list.slice((state.pno - 1) * max, (state.pno - 1) * max + max).map(item)}\n      <nav aria-label=\"Page navigation example\">\n        <ul className=\"pagination justify-content-center\">\n          <li className={`page-item ${state.pno === 1 ? \"disabled\" : \"\"}`}>\n            <button\n              className=\"page-link\"\n              onClick={() => {\n                scrollTop()\n                setState({ pno: state.pno - 1 })\n              }}\n            >\n              Previous\n            </button>\n          </li>\n          {[...Array(Math.ceil(list.length / max))].map((e, i) => (\n            <li\n              className={`page-item ${state.pno === i + 1 ? \"active\" : \"\"}`}\n              key={'a'+i}\n            >\n              <button\n                className=\"page-link\"\n                data-toggle=\"tooltip\"\n                title={`Page ${i + 1}`}\n                onClick={() => {\n                  scrollTop()\n                  setState({ pno: i + 1 })\n                }}\n              >\n                {i + 1}\n              </button>\n            </li>\n          ))}\n          <li\n            className={`page-item ${\n              state.pno === Math.ceil(list.length / max) ? \"disabled\" : \"\"\n            }`}\n          >\n            <button\n              className=\"page-link\"\n              onClick={() => {\n                scrollTop()\n                setState({ pno: state.pno + 1 })\n              }}\n            >\n              Next\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </>\n  )\n}\n\nexport default PaginationComponent\n","import { Link } from \"gatsby\"\nimport React from \"react\"\n\nexport const redirectController = control => {\n  if (!control) {\n  }\n}\nexport const generateSIGHash = sig_images => {\n  let img_hash = {}\n  sig_images &&\n    sig_images.forEach(element => {\n      img_hash[element.name] = element.childImageSharp.fixed.srcWebp\n    })\n  return img_hash\n}\n\nexport const RenderAuthors = (arr, cls) =>\n  arr.map((name, index2) => (\n    <>\n      <Link\n        key={\"x\" + index2}\n        to={\"/members/\" + name.toLowerCase().split(\" \").join(\"\")}\n      >\n        {name}\n      </Link>\n      {index2 + 2 === arr.length\n        ? \" and\"\n        : index2 + 1 !== arr.length\n        ? \",\"\n        : \"\"}\n    </>\n  ))\n"],"sourceRoot":""}