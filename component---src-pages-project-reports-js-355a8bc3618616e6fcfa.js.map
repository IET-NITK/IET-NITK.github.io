{"version":3,"sources":["webpack:///./src/components/partials/pagination.js","webpack:///./src/pages/project-reports.js","webpack:///./src/components/helper.js"],"names":["scrollTop","document","body","documentElement","PaginationComponent","max","list","item","noneMessage","useState","pno","state","setState","length","className","slice","map","aria-label","onClick","Array","Math","ceil","e","i","key","data-toggle","title","Events","data","location","pathname","allFile","nodes","element","index","sig","authors","RenderAuthors","builtBy","to","relativeDirectory","toLowerCase","split","join","type","generateSIGHash","sig_images","img_hash","forEach","name","childImageSharp","fixed","srcWebp","arr","cls","index2"],"mappings":"iIAEA,SAASA,IACyB,IAA5BC,SAASC,KAAKF,UAChBC,SAASC,KAAKF,UAAY,EAE1BC,SAASE,gBAAgBH,UAAY,EA0E1BI,IAvEa,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAAkB,EACtCC,mBAAS,CACjCC,IAAK,IADAC,EADyD,KAClDC,EADkD,KAIhE,OAAoB,IAAhBN,EAAKO,OACA,yBAAKC,UAAU,eAAeN,GAIrC,oCACiB,IAAdG,EAAMD,IACL,oCACE,wBAAII,UAAU,gBAAd,QAAmCH,EAAMD,KACzC,6BACA,8BAEA,KAEHJ,EAAKS,OAAOJ,EAAMD,IAAM,GAAKL,GAAMM,EAAMD,IAAM,GAAKL,EAAMA,GAAKW,IAAIT,GACpE,yBAAKU,aAAW,2BACd,wBAAIH,UAAU,qCACZ,wBAAIA,UAAS,cAA6B,IAAdH,EAAMD,IAAY,WAAa,KACzD,4BACEI,UAAU,YACVI,QAAS,WACPlB,IACAY,EAAS,CAAEF,IAAKC,EAAMD,IAAM,MAJhC,aAUD,YAAIS,MAAMC,KAAKC,KAAKf,EAAKO,OAASR,KAAOW,KAAI,SAACM,EAAGC,GAAJ,OAC5C,wBACET,UAAS,cAAeH,EAAMD,MAAQa,EAAI,EAAI,SAAW,IACzDC,IAAK,IAAID,GAET,4BACET,UAAU,YACVW,cAAY,UACZC,MAAK,SAAUH,EAAI,GACnBL,QAAS,WACPlB,IACAY,EAAS,CAAEF,IAAKa,EAAI,MAGrBA,EAAI,OAIX,wBACET,UAAS,cACPH,EAAMD,MAAQU,KAAKC,KAAKf,EAAKO,OAASR,GAAO,WAAa,KAG5D,4BACES,UAAU,YACVI,QAAS,WACPlB,IACAY,EAAS,CAAEF,IAAKC,EAAMD,IAAM,MAJhC,c,kCChEZ,4FAwFeiB,UAjFA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACtB,OACE,kBAAC,IAAD,CAAQA,SAAUA,EAASC,SAAUJ,MAAO,QAC1C,kBAAC,IAAD,CAAKA,MAAM,oBACX,0BAAMZ,UAAU,uBACd,6BAASA,UAAU,oCACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,gBAAd,8BACA,uKAMF,yBAAKA,UAAU,iBAIb,kBAAC,IAAD,CACET,IAAK,GACLG,YAAY,2CACZF,KAAMsB,EAAKG,QAAQC,MACnBzB,KAAM,SAAC0B,EAASC,GAAV,OACJ,yBAAKV,IAAKU,EAAOpB,UAAU,mBACzB,4BAAKmB,EAAQP,OACb,yBAAKZ,UAAU,QACb,0BAAMA,UAAU,cAAcmB,EAAQE,MAExC,2BACGF,EAAQG,QACP,sCAEGC,YAAcJ,EAAQK,SAAW,GAAI,KAEtC,MAEN,kBAAC,IAAD,CACEC,GACE,aACAN,EAAQO,kBAAkBC,cAAcC,MAAM,KAAKC,KAAK,IAE1D7B,UAAU,iCACV8B,KAAK,UANP,wB,kCC5CpB,yGAOaC,EAAkB,SAAAC,GAC7B,IAAIC,EAAW,GAKf,OAJAD,GACEA,EAAWE,SAAQ,SAAAf,GACjBc,EAASd,EAAQgB,MAAQhB,EAAQiB,gBAAgBC,MAAMC,WAEpDL,GAGIV,EAAgB,SAACgB,EAAKC,GAAN,OAC3BD,EAAIrC,KAAI,SAACiC,EAAMM,GAAP,OACN,oCACE,kBAAC,IAAD,CACE/B,IAAK,IAAM+B,EACXhB,GAAI,YAAcU,EAAKR,cAAcC,MAAM,KAAKC,KAAK,KAEpDM,GAEFM,EAAS,IAAMF,EAAIxC,OAChB,OACA0C,EAAS,IAAMF,EAAIxC,OACnB,IACA","file":"component---src-pages-project-reports-js-355a8bc3618616e6fcfa.js","sourcesContent":["import React, { useState } from \"react\"\n\nfunction scrollTop() {\n  if (document.body.scrollTop !== 0) {\n    document.body.scrollTop = 0\n  } else {\n    document.documentElement.scrollTop = 0\n  }\n}\nconst PaginationComponent = ({ max, list, item, noneMessage }) => {\n  const [state, setState] = useState({\n    pno: 1,\n  })\n  if (list.length === 0) {\n    return <div className=\"text-center\">{noneMessage}</div>\n  }\n\n  return (\n    <>\n      {state.pno !== 1 ? (\n        <>\n          <h6 className=\"text-primary\">Page {state.pno}</h6>\n          <hr />\n          <br />\n        </>\n      ) : null}\n\n      {list.slice((state.pno - 1) * max, (state.pno - 1) * max + max).map(item)}\n      <nav aria-label=\"Page navigation example\">\n        <ul className=\"pagination justify-content-center\">\n          <li className={`page-item ${state.pno === 1 ? \"disabled\" : \"\"}`}>\n            <button\n              className=\"page-link\"\n              onClick={() => {\n                scrollTop()\n                setState({ pno: state.pno - 1 })\n              }}\n            >\n              Previous\n            </button>\n          </li>\n          {[...Array(Math.ceil(list.length / max))].map((e, i) => (\n            <li\n              className={`page-item ${state.pno === i + 1 ? \"active\" : \"\"}`}\n              key={'a'+i}\n            >\n              <button\n                className=\"page-link\"\n                data-toggle=\"tooltip\"\n                title={`Page ${i + 1}`}\n                onClick={() => {\n                  scrollTop()\n                  setState({ pno: i + 1 })\n                }}\n              >\n                {i + 1}\n              </button>\n            </li>\n          ))}\n          <li\n            className={`page-item ${\n              state.pno === Math.ceil(list.length / max) ? \"disabled\" : \"\"\n            }`}\n          >\n            <button\n              className=\"page-link\"\n              onClick={() => {\n                scrollTop()\n                setState({ pno: state.pno + 1 })\n              }}\n            >\n              Next\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </>\n  )\n}\n\nexport default PaginationComponent\n","import { graphql, Link } from \"gatsby\"\nimport React from \"react\"\nimport { RenderAuthors } from \"../components/helper\"\nimport Layout from \"../components/layout\"\nimport PaginationComponent from \"../components/partials/pagination\"\nimport SEO from \"../components/seo\"\n\nconst Events = ({ data, location }) => {\n  return (\n    <Layout location={location.pathname} title={\"Main\"}>\n      <SEO title=\"Project Reports\" />\n      <main className=\"page blog-post-list\">\n        <section className=\"clean-block clean-blog-list dark\">\n          <div className=\"container\">\n            <div className=\"block-heading\">\n              <h2 className=\"text-primary\">Project Reports @ IET NITK</h2>\n              <p>\n                We do many projects throughtout the year, and we love to learn\n                something and give back from them. Here's our reports from our\n                projects.\n              </p>\n            </div>\n            <div className=\"block-content\">\n              {/* <div className=\"card mb-4\">\n                <div className=\"card-body\">Cipher Rovisp Torsion</div>\n              </div> */}\n              <PaginationComponent\n                max={10}\n                noneMessage=\"No project reports here. Come back soon!\"\n                list={data.allFile.nodes}\n                item={(element, index) => (\n                  <div key={index} className=\"clean-blog-post\">\n                    <h3>{element.title}</h3>\n                    <div className=\"info\">\n                      <span className=\"text-muted\">{element.sig}</span>\n                    </div>\n                    <p>\n                      {element.authors ? (\n                        <p>\n                          Built by\n                          {RenderAuthors(element.builtBy || [], \"\")}\n                        </p>\n                      ) : null}\n                    </p>\n                    <Link\n                      to={\n                        \"/projects/\" +\n                        element.relativeDirectory.toLowerCase().split(\" \").join(\"\")\n                      }\n                      className=\"btn btn-outline-primary btn-sm\"\n                      type=\"button\"\n                    >\n                      Read More\n                    </Link>\n                  </div>\n                )}\n              />\n            </div>\n          </div>\n        </section>\n      </main>\n    </Layout>\n  )\n}\n\nexport const postQuery = graphql`\n  {\n    allFile(\n      filter: {\n        sourceInstanceName: { eq: \"project-reports\" }\n        extension: { eq: \"md\" }\n      }\n    ) {\n      nodes {\n        relativeDirectory\n        sourceInstanceName\n        childMarkdownRemark {\n          frontmatter {\n            title\n            authors\n            date\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Events\n","import { Link } from \"gatsby\"\nimport React from \"react\"\n\nexport const redirectController = control => {\n  if (!control) {\n  }\n}\nexport const generateSIGHash = sig_images => {\n  let img_hash = {}\n  sig_images &&\n    sig_images.forEach(element => {\n      img_hash[element.name] = element.childImageSharp.fixed.srcWebp\n    })\n  return img_hash\n}\n\nexport const RenderAuthors = (arr, cls) =>\n  arr.map((name, index2) => (\n    <>\n      <Link\n        key={\"x\" + index2}\n        to={\"/members/\" + name.toLowerCase().split(\" \").join(\"\")}\n      >\n        {name}\n      </Link>\n      {index2 + 2 === arr.length\n        ? \" and\"\n        : index2 + 1 !== arr.length\n        ? \",\"\n        : \"\"}\n    </>\n  ))\n"],"sourceRoot":""}