{"version":3,"file":"component---src-pages-events-js-cf0472ddc564271ce85f.js","mappings":"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","sources":["webpack://ietnitk/./src/components/partials/pagination.js","webpack://ietnitk/./src/pages/events.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\nfunction scrollTop() {\n  if (document.body.scrollTop !== 0) {\n    document.body.scrollTop = 0;\n  } else {\n    document.documentElement.scrollTop = 0;\n  }\n}\nconst PaginationComponent = ({\n  max,\n  list,\n  item,\n  noneMessage,\n  filterBy,\n  filterLabel,\n}) => {\n  const [state, setState] = useState({\n    pno: 1,\n    listState: list,\n    filterType: null,\n    // eslint-ignore-next-line\n    filterCategories: [...new Set(list.map((element) => element[filterBy]))],\n  });\n\n  if (state.listState && state.listState.length === 0) {\n    return <div className=\"text-center\">{noneMessage}</div>;\n  }\n\n  return (\n    <>\n      {filterBy && state.listState ? (\n        <Dropdown>\n          <Dropdown.Toggle\n            className=\"mr-4\"\n            id={`dropdown-${  filterBy}`}\n            size=\"sm\"\n            variant=\"outline-primary\"\n          >\n            {state.filterType ? state.filterType : filterLabel}\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            {state.filterCategories &&\n              state.filterCategories.map(({ex}, index) => (\n                <Dropdown.Item\n                  key={index}\n                  name={ex}\n                  onClick={(event) =>\n                    setState({\n                      ...state,\n                      listState: list.filter((element) => {\n                        return element[filterBy] === event.target.name;\n                      }),\n                      filterType: event.target.name,\n                    })\n                  }\n                >\n                  {ex}\n                </Dropdown.Item>\n              ))}\n            {state.filterType ? (\n              <Dropdown.Item\n                onClick={() => {\n                  setState({\n                    ...state,\n                    listState: list,\n                    filterType: null,\n                  });\n                }}\n              >\n                Clear Filters\n              </Dropdown.Item>\n            ) : null}\n          </Dropdown.Menu>\n          {state.listState.length} Items\n          <hr />\n        </Dropdown>\n      ) : null}\n\n      {state.pno !== 1 ? (\n        <>\n          <h6 className=\"text-primary\">Page {state.pno}</h6>\n          <hr />\n          <br />\n        </>\n      ) : null}\n\n      {state.listState &&\n        state.listState\n          .slice((state.pno - 1) * max, (state.pno - 1) * max + max)\n          .map(item)}\n      <nav aria-label=\"Page navigation example\">\n        <ul className=\"pagination justify-content-center\">\n          <li className={`page-item ${state.pno === 1 ? \"disabled\" : \"\"}`}>\n            <button\n              className=\"page-link\"\n              onClick={() => {\n                scrollTop();\n                setState({ ...state, pno: state.pno - 1 });\n              }}\n            >\n              Previous\n            </button>\n          </li>\n          {state.listState &&\n            [...Array(Math.ceil(state.listState.length / max))].map((element, index) => (\n              <li\n                className={`page-item ${state.pno === index + 1 ? \"active\" : \"\"}`}\n                key={index}\n              >\n                <button\n                  className=\"page-link\"\n                  data-toggle=\"tooltip\"\n                  onClick={() => {\n                    scrollTop();\n                    setState({ ...state, pno: index + 1 });\n                  }}\n                  title={`Page ${index + 1}`}\n                >\n                  {index + 1}\n                </button>\n              </li>\n            ))}\n          <li\n            className={`page-item ${\n              state.listState &&\n              state.pno === Math.ceil(state.listState.length / max)\n                ? \"disabled\"\n                : \"\"\n            }`}\n          >\n            <button\n              className=\"page-link\"\n              onClick={() => {\n                scrollTop();\n                setState({ ...state, pno: state.pno + 1 });\n              }}\n            >\n              Next\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </>\n  );\n};\n\nexport default PaginationComponent;\n","import { graphql, Link } from \"gatsby\";\nimport React from \"react\";\nimport Layout from \"../components/layout\";\nimport PaginationComponent from \"../components/partials/pagination\";\nimport SearchEngineOps from \"../components/seo\";\n\nconst Events = ({ data, location }) => {\n  return (\n    <Layout location={location.pathname} title={\"Main\"}>\n      <SearchEngineOps title=\"Events\" />\n      <main className=\"page blog-post-list\">\n        <section className=\"clean-block clean-blog-list dark\">\n          <div className=\"container\">\n            <div className=\"block-heading\">\n              <h2 className=\"text-primary\">Events @ IET NITK</h2>\n              <p>\n                We hold many events throughtout the year, here's a glimpse of it\n                all\n              </p>\n            </div>\n            <div className=\"block-content\">\n              <PaginationComponent\n                item={(element, index) => (\n                  <div className=\"clean-blog-post\" key={index}>\n                    <div className=\"row\">\n                      <div className=\"col-lg-7\">\n                        <h3>{element.title}</h3>\n                        <div className=\"info\">\n                          <span className=\"text-muted\">\n                            {element.date}\n                          </span>\n                        </div>\n                        <p>{element.excerpt}</p>\n                        <Link\n                          className=\"btn btn-outline-primary btn-sm\"\n                          to={`/events/${  element.route}`}\n                          type=\"button\"\n                        >\n                          Read More \n                        </Link>\n                      </div>\n                    </div>\n                  </div>\n                )}\n\n                list={data.events.nodes}\n                max={5}\n                noneMessage=\"No event reports here. Come back soon!\"\n              />\n            </div>\n          </div>\n        </section>\n      </main>\n    </Layout>\n  );\n};\n\nexport const postQuery = graphql`\n  {\n    events:   allStrapiEvents(sort: {fields: date, order: DESC}) {\n      nodes {\n        date(formatString: \"MMMM Do, YYYY\")\n        title\n        excerpt\n        route\n      }\n    }\n  }\n`;\n\nexport default Events;\n"],"names":["scrollTop","document","body","documentElement","max","list","item","noneMessage","filterBy","filterLabel","useState","pno","listState","filterType","filterCategories","Set","map","element","state","setState","length","className","id","size","variant","index","ex","key","name","onClick","event","filter","target","slice","Array","Math","ceil","title","data","location","pathname","date","excerpt","to","route","type","events","nodes"],"sourceRoot":""}