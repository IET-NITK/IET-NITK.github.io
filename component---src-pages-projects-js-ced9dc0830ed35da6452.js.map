{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./src/components/partials/pagination.js","webpack:///./src/components/helper.js"],"names":["Projects","data","location","pathname","title","className","max","filterBy","filterLabel","list","projects","nodes","item","element","index","key","label","sig","to","toLowerCase","description","builtBy","RenderAuthors","url","split","join","type","scrollTop","document","body","documentElement","PaginationComponent","noneMessage","useState","pno","list_state","filterType","filterCategories","Set","map","e","state","setState","length","Toggle","variant","id","size","Menu","ex","i","Item","name","onClick","event","filter","target","slice","aria-label","Array","Math","ceil","data-toggle","generateSIGHash","sig_images","img_hash","forEach","childImageSharp","fixed","srcWebp","arr","cls","index2"],"mappings":"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","file":"component---src-pages-projects-js-ced9dc0830ed35da6452.js","sourcesContent":["import { graphql, Link } from \"gatsby\"\nimport React from \"react\"\nimport { RenderAuthors } from \"../components/helper\"\nimport Layout from \"../components/layout\"\nimport PaginationComponent from \"../components/partials/pagination\"\nimport SEO from \"../components/seo\"\n\nconst Projects = ({ data, location }) => {\n  return (\n    <Layout location={location.pathname} title={\"Main\"}>\n      <SEO title=\"Projects\" />\n      <main className=\"page blog-post-list\">\n        <section className=\"clean-block clean-blog-list dark\">\n          <div className=\"container\">\n            <div className=\"block-heading\">\n              <h2 className=\"text-primary\">Projects @ IET NITK</h2>\n              <p>\n                We do many projects throughtout the year, here's a glimpse of it\n                all\n              </p>\n            </div>\n            <div className=\"block-content\">\n              {/* <div className=\"card mb-4\">\n                <div className=\"card-body\">Cipher Rovisp Torsion</div>\n              </div> */}\n              <PaginationComponent\n                max={10}\n                filterBy=\"sig\"\n                filterLabel=\"Filter by SIG\"\n                list={data.projects.nodes}\n                item={(element, index) => (\n                  <div key={index} className=\"clean-blog-post\">\n                    <h3 className=\"text-capitalize\">{element.title}</h3>\n                    {element.label ? (\n                      <div className=\"badge badge-primary mr-2 \">{element.label}</div>\n                    ) : null}\n                    {element.sig ? (\n                      <Link\n                        to={\"/sigs/\" + element.sig.toLowerCase()}\n                        className=\"badge badge-info text-uppercase\"\n                      >\n                        {element.sig}\n                      </Link>\n                    ) : null}\n                    <p>{element.description || \"\"}</p>\n                    {element.builtBy ? (\n                      <p>\n                        Built by\n                        {RenderAuthors(element.builtBy || [], \"\")}\n                      </p>\n                    ) : null}\n                    {element.url ? (\n                      <Link\n                        to={\n                          \"/projects/\" +\n                          element.title.toLowerCase().split(\" \").join(\"\")\n                        }\n                        className=\"btn btn-outline-primary btn-sm\"\n                        type=\"button\"\n                      >\n                        Read More\n                      </Link>\n                    ) : null}\n                  </div>\n                )}\n              />\n            </div>\n          </div>\n        </section>\n      </main>\n    </Layout>\n  )\n}\n\nexport const postQuery = graphql`\n  {\n    projects: allProjectsYaml(\n      filter: { builtBy: {} }\n      sort: { fields: builtBy }\n    ) {\n      nodes {\n        title\n        description\n        sig\n        builtBy\n        label\n        url\n      }\n    }\n  }\n`\n\nexport default Projects\n","import React, { useState } from \"react\"\nimport Dropdown from \"react-bootstrap/Dropdown\"\n\nfunction scrollTop() {\n  if (document.body.scrollTop !== 0) {\n    document.body.scrollTop = 0\n  } else {\n    document.documentElement.scrollTop = 0\n  }\n}\nconst PaginationComponent = ({\n  max,\n  list,\n  item,\n  noneMessage,\n  filterBy,\n  filterLabel,\n}) => {\n  const [state, setState] = useState({\n    pno: 1,\n    list_state: list,\n    filterType: null,\n    filterCategories: [...new Set(list.map(e => e[filterBy]))],\n  })\n\n  if (state.list_state && state.list_state.length === 0) {\n    return <div className=\"text-center\">{noneMessage}</div>\n  }\n\n  return (\n    <>\n      {filterBy && state.list_state ? (\n        <Dropdown>\n          <Dropdown.Toggle\n            className=\"mr-4\"\n            variant=\"outline-primary\"\n            id={\"dropdown-\" + filterBy}\n            size=\"sm\"\n          >\n            {state.filterType ? state.filterType : filterLabel}\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            {state.filterCategories &&\n              state.filterCategories.map((ex, i) => (\n                <Dropdown.Item\n                  name={ex}\n                  key={i}\n                  onClick={event =>\n                    setState({\n                      ...state,\n                      list_state: list.filter(e => {\n                        return e[filterBy] === event.target.name\n                      }),\n                      filterType: event.target.name,\n                    })\n                  }\n                >\n                  {ex}\n                </Dropdown.Item>\n              ))}\n            {state.filterType ? (\n              <Dropdown.Item\n                onClick={event => {\n                  setState({\n                    ...state,\n                    list_state: list,\n                    filterType: null,\n                  })\n                }}\n              >\n                Clear Filters\n              </Dropdown.Item>\n            ) : null}\n          </Dropdown.Menu>\n          {state.list_state.length} Items\n          <hr />\n        </Dropdown>\n      ) : null}\n\n      {state.pno !== 1 ? (\n        <>\n          <h6 className=\"text-primary\">Page {state.pno}</h6>\n          <hr />\n          <br />\n        </>\n      ) : null}\n\n      {state.list_state &&\n        state.list_state\n          .slice((state.pno - 1) * max, (state.pno - 1) * max + max)\n          .map(item)}\n      <nav aria-label=\"Page navigation example\">\n        <ul className=\"pagination justify-content-center\">\n          <li className={`page-item ${state.pno === 1 ? \"disabled\" : \"\"}`}>\n            <button\n              className=\"page-link\"\n              onClick={() => {\n                scrollTop()\n                setState({ ...state, pno: state.pno - 1 })\n              }}\n            >\n              Previous\n            </button>\n          </li>\n          {state.list_state &&\n            [...Array(Math.ceil(state.list_state.length / max))].map((e, i) => (\n              <li\n                className={`page-item ${state.pno === i + 1 ? \"active\" : \"\"}`}\n                key={\"a\" + i}\n              >\n                <button\n                  className=\"page-link\"\n                  data-toggle=\"tooltip\"\n                  title={`Page ${i + 1}`}\n                  onClick={() => {\n                    scrollTop()\n                    setState({ ...state, pno: i + 1 })\n                  }}\n                >\n                  {i + 1}\n                </button>\n              </li>\n            ))}\n          <li\n            className={`page-item ${\n              state.list_state &&\n              state.pno === Math.ceil(state.list_state.length / max)\n                ? \"disabled\"\n                : \"\"\n            }`}\n          >\n            <button\n              className=\"page-link\"\n              onClick={() => {\n                scrollTop()\n                setState({ ...state, pno: state.pno + 1 })\n              }}\n            >\n              Next\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </>\n  )\n}\n\nexport default PaginationComponent\n","import { Link } from \"gatsby\"\nimport React from \"react\"\n\nexport const redirectController = control => {\n  if (!control) {\n  }\n}\nexport const generateSIGHash = sig_images => {\n  let img_hash = {}\n  sig_images &&\n    sig_images.forEach(element => {\n      img_hash[element.name] = element.childImageSharp.fixed.srcWebp\n    })\n  return img_hash\n}\n\nexport const RenderAuthors = (arr, cls) =>\n  arr.map((name, index2) => (\n    <>\n      &nbsp;\n      <Link\n        key={\"x\" + index2}\n        to={\"/members/\" + name.toLowerCase().split(\" \").join(\"\")}\n      >\n        {name}\n      </Link>\n      {index2 + 2 === arr.length\n        ? \" and\"\n        : index2 + 1 !== arr.length\n        ? \",\"\n        : \"\"}\n    </>\n  ))\n"],"sourceRoot":""}