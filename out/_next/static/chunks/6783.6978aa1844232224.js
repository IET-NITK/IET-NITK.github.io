"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6783],{6783:function(i,n,s){s.d(n,{Linker:function(){return l}});var t=s(2060);class e extends t.Cd{constructor(i,n,s,t){super(i,n,s),this.canvasSize=t,this.canvasSize={...t}}contains(i){const{width:n,height:s}=this.canvasSize,{x:t,y:e}=i;return super.contains(i)||super.contains({x:t-n,y:e})||super.contains({x:t-n,y:e-s})||super.contains({x:t,y:e-s})}intersects(i){if(super.intersects(i))return!0;const n=i,s=i,e={x:i.position.x-this.canvasSize.width,y:i.position.y-this.canvasSize.height};if(void 0!==s.radius){const i=new t.Cd(e.x,e.y,2*s.radius);return super.intersects(i)}if(void 0!==n.size){const i=new t.Ae(e.x,e.y,2*n.size.width,2*n.size.height);return super.intersects(i)}return!1}}var o=s(4737);const r=0,a=0;function c(i,n,s,e,o){const{dx:r,dy:a,distance:c}=(0,t.oW)(i,n);if(!o||c<=s)return c;const l={x:Math.abs(r),y:Math.abs(a)},h=Math.min(l.x,e.width-l.x),u=Math.min(l.y,e.height-l.y);return Math.sqrt(h**2+u**2)}class l extends t.$S{constructor(i){super(i),this._setColor=i=>{if(!i.options.links)return;const n=this.linkContainer,s=i.options.links;let e=void 0===s.id?n.particles.linksColor:n.particles.linksColors.get(s.id);if(e)return;const o=s.color;e=(0,t.Dt)(o,s.blink,s.consent),void 0===s.id?n.particles.linksColor=e:n.particles.linksColors.set(s.id,e)},this.linkContainer=i}clear(){}init(){this.linkContainer.particles.linksColor=void 0,this.linkContainer.particles.linksColors=new Map}interact(i){if(!i.options.links)return;i.links=[];const n=i.getPosition(),s=this.container,o=s.canvas.size;if(n.x<r||n.y<a||n.x>o.width||n.y>o.height)return;const l=i.options.links,h=l.opacity,u=i.retina.linksDistance??0,d=l.warp;let p;p=d?new e(n.x,n.y,u,o):new t.Cd(n.x,n.y,u);const k=s.particles.quadTree.query(p);for(const t of k){const s=t.options.links;if(i===t||!s?.enable||l.id!==s.id||t.spawning||t.destroyed||!t.links||i.links.some((i=>i.destination===t))||t.links.some((n=>n.destination===i)))continue;const e=t.getPosition();if(e.x<r||e.y<a||e.x>o.width||e.y>o.height)continue;const p=c(n,e,u,o,d&&s.warp);if(p>u)continue;const k=(1-p/u)*h;this._setColor(i),i.links.push({destination:t,opacity:k})}}isEnabled(i){return!!i.options.links?.enable}loadParticlesOptions(i,...n){i.links||(i.links=new o.y);for(const s of n)i.links.load(s?.links)}reset(){}}}}]);