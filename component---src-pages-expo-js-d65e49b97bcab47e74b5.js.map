{"version":3,"sources":["webpack://ietnitk/./src/components/helper.js","webpack://ietnitk/./src/components/partials/pagination.js","webpack://ietnitk/./src/pages/expo.js"],"names":["RenderAuthors","arr","cls","map","index2","name","className","key","to","toLowerCase","split","join","length","RenderAuthorsName","style","display","class","RenderProjectDescription","element","len","substring","newRenderAuthors","niceFormat","replace","letter","toUpperCase","getRandom","n","result","Array","taken","RangeError","x","Math","floor","random","scrollTop","document","body","documentElement","max","list","item","noneMessage","filterBy","filterLabel","useState","pno","list_state","filterType","filterCategories","Set","e","state","setState","variant","id","size","i","ex","onClick","event","filter","target","slice","ceil","title","data","location","useEffect","expo","open","navigate","pathname","Date","getFullYear","String","projects","nodes","index","sig","description","authors","url","type"],"mappings":"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","file":"component---src-pages-expo-js-d65e49b97bcab47e74b5.js","sourcesContent":["import { Link } from \"gatsby\"\nimport React from \"react\"\n\nexport const redirectController = control => {\n  if (!control) {\n  }\n}\nexport const generateSIGHash = sig_images => {\n  let img_hash = {}\n  sig_images &&\n    sig_images.forEach(element => {\n      img_hash[element.name] = element.childImageSharp.fixed.srcWebp\n    })\n  return img_hash\n}\n\nexport const RenderAuthors = (arr, cls) =>\n  arr.map(({ name }, index2) => (\n    <>\n      &nbsp;\n      <Link\n      className={cls}\n        key={\"x\" + index2}\n        to={\"/members/\" + name.toLowerCase().split(\" \").join(\"\")}\n      >\n        {name}\n      </Link>\n      {index2 + 2 === arr.length\n        ? \" and\"\n        : index2 + 1 !== arr.length\n        ? \",\"\n        : \"\"}\n    </>\n  ))\n\nexport const RenderAuthorsName = (arr, cls) =>\n  arr.map(({ name }, index2) => (\n    <>\n      <Link\n        className=\"pr-3\"\n        key={\"x\" + index2}\n        to={\"/members/\" + name.toLowerCase().split(\" \").join(\"\")}\n        style={{ display: \"inline-block\" }}\n      >\n        <span class=\"project-auther-name\"> {name} </span>\n      </Link>\n      {\"\"}\n    </>\n  ))\n\nexport const RenderProjectDescription = (element, len = 100) => {\n  if (element != null && element.length >= len) {\n    return element.substring(0, len) + \"...\"\n  }\n  return element\n}\n\nexport const newRenderAuthors = (arr, cls) =>\n  arr.map(({ name }, index2) => (\n    <>\n      &nbsp;\n      <Link\n        key={\"x\" + index2}\n        to={\"/members/\" + name.toLowerCase().split(\" \").join(\"\")}\n      >\n        {name}\n      </Link>\n      {index2 + 2 === arr.length\n        ? \" and\"\n        : index2 + 1 !== arr.length\n        ? \",\"\n        : \"\"}\n    </>\n  ))\n\nexport const niceFormat = name =>\n  name.toLowerCase().replace(/^\\w|\\s\\w/g, function (letter) {\n    return letter.toUpperCase()\n  })\n\nexport function getRandom(arr, n) {\n  var result = new Array(n),\n    len = arr.length,\n    taken = new Array(len)\n  if (n > len)\n    throw new RangeError(\"getRandom: more elements taken than available\")\n  while (n--) {\n    var x = Math.floor(Math.random() * len)\n    result[n] = arr[x in taken ? taken[x] : x]\n    taken[x] = --len in taken ? taken[len] : len\n  }\n  return result\n}\n","import React, { useState } from \"react\"\nimport Dropdown from \"react-bootstrap/Dropdown\"\n\nfunction scrollTop() {\n  if (document.body.scrollTop !== 0) {\n    document.body.scrollTop = 0\n  } else {\n    document.documentElement.scrollTop = 0\n  }\n}\nconst PaginationComponent = ({\n  max,\n  list,\n  item,\n  noneMessage,\n  filterBy,\n  filterLabel,\n}) => {\n  const [state, setState] = useState({\n    pno: 1,\n    list_state: list,\n    filterType: null,\n    filterCategories: [...new Set(list.map(e => e[filterBy]))],\n  })\n\n  if (state.list_state && state.list_state.length === 0) {\n    return <div className=\"text-center\">{noneMessage}</div>\n  }\n\n  return (\n    <>\n      {filterBy && state.list_state ? (\n        <Dropdown>\n          <Dropdown.Toggle\n            className=\"mr-4\"\n            variant=\"outline-primary\"\n            id={\"dropdown-\" + filterBy}\n            size=\"sm\"\n          >\n            {state.filterType ? state.filterType : filterLabel}\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            {state.filterCategories &&\n              state.filterCategories.map(({ex}, i) => (\n                <Dropdown.Item\n                  name={ex}\n                  key={i}\n                  onClick={event =>\n                    setState({\n                      ...state,\n                      list_state: list.filter(e => {\n                        return e[filterBy] === event.target.name\n                      }),\n                      filterType: event.target.name,\n                    })\n                  }\n                >\n                  {ex}\n                </Dropdown.Item>\n              ))}\n            {state.filterType ? (\n              <Dropdown.Item\n                onClick={event => {\n                  setState({\n                    ...state,\n                    list_state: list,\n                    filterType: null,\n                  })\n                }}\n              >\n                Clear Filters\n              </Dropdown.Item>\n            ) : null}\n          </Dropdown.Menu>\n          {state.list_state.length} Items\n          <hr />\n        </Dropdown>\n      ) : null}\n\n      {state.pno !== 1 ? (\n        <>\n          <h6 className=\"text-primary\">Page {state.pno}</h6>\n          <hr />\n          <br />\n        </>\n      ) : null}\n\n      {state.list_state &&\n        state.list_state\n          .slice((state.pno - 1) * max, (state.pno - 1) * max + max)\n          .map(item)}\n      <nav aria-label=\"Page navigation example\">\n        <ul className=\"pagination justify-content-center\">\n          <li className={`page-item ${state.pno === 1 ? \"disabled\" : \"\"}`}>\n            <button\n              className=\"page-link\"\n              onClick={() => {\n                scrollTop()\n                setState({ ...state, pno: state.pno - 1 })\n              }}\n            >\n              Previous\n            </button>\n          </li>\n          {state.list_state &&\n            [...Array(Math.ceil(state.list_state.length / max))].map((e, i) => (\n              <li\n                className={`page-item ${state.pno === i + 1 ? \"active\" : \"\"}`}\n                key={i}\n              >\n                <button\n                  className=\"page-link\"\n                  data-toggle=\"tooltip\"\n                  title={`Page ${i + 1}`}\n                  onClick={() => {\n                    scrollTop()\n                    setState({ ...state, pno: i + 1 })\n                  }}\n                >\n                  {i + 1}\n                </button>\n              </li>\n            ))}\n          <li\n            className={`page-item ${\n              state.list_state &&\n              state.pno === Math.ceil(state.list_state.length / max)\n                ? \"disabled\"\n                : \"\"\n            }`}\n          >\n            <button\n              className=\"page-link\"\n              onClick={() => {\n                scrollTop()\n                setState({ ...state, pno: state.pno + 1 })\n              }}\n            >\n              Next\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </>\n  )\n}\n\nexport default PaginationComponent\n","import { graphql, Link, navigate } from \"gatsby\"\nimport React, { useEffect } from \"react\"\nimport { RenderAuthors } from \"../components/helper\"\nimport Layout from \"../components/layout\"\nimport PaginationComponent from \"../components/partials/pagination\"\nimport SearchEngineOps from \"../components/seo\"\n\nconst Expo = ({ data, location }) => {\n  useEffect(() => {\n    if (data.expo.open !== true) {\n      navigate(\"/\")\n    }\n  })\n  return (\n    <Layout location={location.pathname} title={\"Main\"}>\n      <SearchEngineOps title={`Expo ${new Date().getFullYear()}`} />\n      <main className=\"page blog-post-list\">\n        <section className=\"clean-block clean-blog-list dark\">\n          <div className=\"container\">\n            <div className=\"block-heading\">\n              <h2 className=\"text-primary\">IET NITK @ Expo {new Date().getFullYear()}</h2>\n              <p>\n                Expo '{String(new Date().getFullYear()).slice(2)} is a club-wide project showcase showing the best of the\n                products made by NITK. Here's some of ours.\n              </p>\n            </div>\n            <div className=\"block-content\">\n              <PaginationComponent\n                max={10}\n                list={data.projects.nodes}\n                filterBy=\"sig\"\n                filterLabel=\"Filter by SIG\"\n                item={(element, index) => (\n                  <div key={index} className=\"clean-blog-post\">\n                    <h3 className=\"text-capitalize\">{element.title}</h3>\n                    <div className=\"info\">\n                      <span className=\"text-muted\">\n                        <Link to={\"/sigs/\" + element.sig.name.toLowerCase()}>\n                          {element.sig.name}\n                        </Link>\n                      </span>\n                    </div>\n                    {element.description || \"\"}\n                    {element.authors ? (\n                      <p>\n                        Built by\n                        {RenderAuthors(element.authors, \"\")}\n                      </p>\n                    ) : null}\n\n                    {element.url ? (\n                      <Link\n                        to={\n                          \"/projects/\" +\n                          element.title.toLowerCase().split(\" \").join(\"\")\n                        }\n                        className=\"btn btn-outline-primary btn-sm\"\n                        type=\"button\"\n                      >\n                        Read More\n                      </Link>\n                    ) : null}\n                  </div>\n                )}\n              />\n            </div>\n          </div>\n        </section>\n      </main>\n    </Layout>\n  )\n}\n\nexport const postQuery = graphql`\n  {\n    expo: strapiExpo {\n      open\n    }\n    projects:   allStrapiProjects(sort: {fields: title, order: DESC}) {\n      nodes {\n        title\n        description\n        sig {\n          name\n        }\n        url\n        authors {\n          name\n        }\n      }\n    }\n  }\n`\nexport default Expo\n"],"sourceRoot":""}