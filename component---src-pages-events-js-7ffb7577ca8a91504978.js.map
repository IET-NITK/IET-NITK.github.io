{"version":3,"sources":["webpack:///./src/components/partials/pagination.js","webpack:///./src/pages/events.js"],"names":["scrollTop","document","body","documentElement","PaginationComponent","max","list","item","noneMessage","filterBy","filterLabel","useState","pno","list_state","filterType","filterCategories","Set","map","e","state","setState","length","className","Toggle","variant","id","size","Menu","ex","i","Item","name","key","onClick","event","filter","target","slice","aria-label","Array","Math","ceil","data-toggle","title","Events","data","location","pathname","allFile","nodes","element","index","childMarkdownRemark","frontmatter","date","excerpt","to","relativeDirectory","type"],"mappings":"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","file":"component---src-pages-events-js-7ffb7577ca8a91504978.js","sourcesContent":["import React, { useState } from \"react\"\nimport Dropdown from \"react-bootstrap/Dropdown\"\n\nfunction scrollTop() {\n  if (document.body.scrollTop !== 0) {\n    document.body.scrollTop = 0\n  } else {\n    document.documentElement.scrollTop = 0\n  }\n}\nconst PaginationComponent = ({\n  max,\n  list,\n  item,\n  noneMessage,\n  filterBy,\n  filterLabel,\n}) => {\n  const [state, setState] = useState({\n    pno: 1,\n    list_state: list,\n    filterType: null,\n    filterCategories: [...new Set(list.map(e => e[filterBy]))],\n  })\n\n  if (state.list_state && state.list_state.length === 0) {\n    return <div className=\"text-center\">{noneMessage}</div>\n  }\n\n  return (\n    <>\n      {filterBy && state.list_state ? (\n        <Dropdown>\n          <Dropdown.Toggle\n            variant=\"outline-primary\"\n            id={\"dropdown-\" + filterBy}\n            size=\"sm\"\n          >\n            {state.filterType ? state.filterType : filterLabel}\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu>\n            {state.filterCategories &&\n              state.filterCategories.map((ex, i) => (\n                <Dropdown.Item\n                  name={ex}\n                  key={i}\n                  onClick={event =>\n                    setState({\n                      ...state,\n                      list_state: list.filter(e => {\n                        return e[filterBy] === event.target.name\n                      }),\n                      filterType: event.target.name,\n                    })\n                  }\n                >\n                  {ex}\n                </Dropdown.Item>\n              ))}\n            {state.filterType ? (\n              <Dropdown.Item\n                onClick={event => {\n                  setState({\n                    ...state,\n                    list_state: list,\n                    filterType: null,\n                  })\n                }}\n              >\n                Clear Filters\n              </Dropdown.Item>\n            ) : null}\n          </Dropdown.Menu>\n          <hr />\n        </Dropdown>\n      ) : null}\n\n      {state.pno !== 1 ? (\n        <>\n          <h6 className=\"text-primary\">Page {state.pno}</h6>\n          <hr />\n          <br />\n        </>\n      ) : null}\n\n      {state.list_state &&\n        state.list_state\n          .slice((state.pno - 1) * max, (state.pno - 1) * max + max)\n          .map(item)}\n      <nav aria-label=\"Page navigation example\">\n        <ul className=\"pagination justify-content-center\">\n          <li className={`page-item ${state.pno === 1 ? \"disabled\" : \"\"}`}>\n            <button\n              className=\"page-link\"\n              onClick={() => {\n                scrollTop()\n                setState({ ...state, pno: state.pno - 1 })\n              }}\n            >\n              Previous\n            </button>\n          </li>\n          {state.list_state &&\n            [...Array(Math.ceil(state.list_state.length / max))].map((e, i) => (\n              <li\n                className={`page-item ${state.pno === i + 1 ? \"active\" : \"\"}`}\n                key={\"a\" + i}\n              >\n                <button\n                  className=\"page-link\"\n                  data-toggle=\"tooltip\"\n                  title={`Page ${i + 1}`}\n                  onClick={() => {\n                    scrollTop()\n                    setState({ ...state, pno: i + 1 })\n                  }}\n                >\n                  {i + 1}\n                </button>\n              </li>\n            ))}\n          <li\n            className={`page-item ${\n              state.list_state &&\n              state.pno === Math.ceil(state.list_state.length / max)\n                ? \"disabled\"\n                : \"\"\n            }`}\n          >\n            <button\n              className=\"page-link\"\n              onClick={() => {\n                scrollTop()\n                setState({ ...state,pno: state.pno + 1 })\n              }}\n            >\n              Next\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </>\n  )\n}\n\nexport default PaginationComponent\n","import { graphql, Link } from \"gatsby\"\nimport React from \"react\"\nimport Layout from \"../components/layout\"\nimport PaginationComponent from \"../components/partials/pagination\"\nimport SEO from \"../components/seo\"\n\nconst Events = ({ data, location }) => {\n  return (\n    <Layout location={location.pathname} title={\"Main\"}>\n      <SEO title=\"Events\" />\n      <main className=\"page blog-post-list\">\n        <section className=\"clean-block clean-blog-list dark\">\n          <div className=\"container\">\n            <div className=\"block-heading\">\n              <h2 className=\"text-primary\">Events @ IET NITK</h2>\n              <p>\n                We hold many events throughtout the year, here's a glimpse of it\n                all\n              </p>\n            </div>\n            <div className=\"block-content\">\n              <PaginationComponent\n                max={5}\n\n                noneMessage=\"No event reports here. Come back soon!\"\n                list={data.allFile.nodes}\n                item={(element, index) => (\n                  <div key={index} className=\"clean-blog-post\">\n                    <div className=\"row\">\n                      <div className=\"col-lg-7\">\n                        <h3>{element.childMarkdownRemark.frontmatter.title}</h3>\n                        <div className=\"info\">\n                          <span className=\"text-muted\">\n                            {element.childMarkdownRemark.frontmatter.date}\n                          </span>\n                        </div>\n                        <p>{element.childMarkdownRemark.excerpt}</p>\n                        <Link\n                          to={\"/events/\" + element.relativeDirectory}\n                          className=\"btn btn-outline-primary btn-sm\"\n                          type=\"button\"\n                        >\n                          Read More \n                        </Link>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              />\n            </div>\n          </div>\n        </section>\n      </main>\n    </Layout>\n  )\n}\n\nexport const postQuery = graphql`\n  {\n    allFile(\n      filter: { sourceInstanceName: { eq: \"events\" }, ext: { eq: \".md\" } }\n      sort: {\n        fields: childMarkdownRemark___frontmatter___date\n        order: DESC\n      }\n    ) {\n      nodes {\n        relativeDirectory\n        childMarkdownRemark {\n          excerpt(format: PLAIN)\n          frontmatter {\n            date(formatString: \"MMMM Do, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Events\n"],"sourceRoot":""}