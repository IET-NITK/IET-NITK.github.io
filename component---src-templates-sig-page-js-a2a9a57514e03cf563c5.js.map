{"version":3,"sources":["webpack:///./src/components/partials/pagination.js","webpack:///./src/components/helper.js","webpack:///./src/templates/sig-page.js"],"names":["scrollTop","document","body","documentElement","PaginationComponent","max","list","item","noneMessage","useState","pno","state","setState","length","className","slice","map","aria-label","onClick","Array","Math","ceil","e","i","key","data-toggle","title","generateSIGHash","sig_images","img_hash","forEach","element","name","childImageSharp","fixed","srcWebp","RenderAuthors","arr","cls","index2","to","toLowerCase","split","join","SIG","pageContext","pathname","data","sig_details","sig_logo","sig_projects","location","src","alt","style","maxWidth","description","nodes","index","builtBy","URL"],"mappings":"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","file":"component---src-templates-sig-page-js-a2a9a57514e03cf563c5.js","sourcesContent":["import React, { useState } from \"react\"\n\nfunction scrollTop() {\n  if (document.body.scrollTop !== 0) {\n    document.body.scrollTop = 0\n  } else {\n    document.documentElement.scrollTop = 0\n  }\n}\nconst PaginationComponent = ({ max, list, item, noneMessage }) => {\n  const [state, setState] = useState({\n    pno: 1,\n  })\n  if (list.length === 0) {\n    return <div className=\"text-center\">{noneMessage}</div>\n  }\n\n  return (\n    <>\n      {state.pno !== 1 ? (\n        <>\n          <h6 className=\"text-primary\">Page {state.pno}</h6>\n          <hr />\n          <br />\n        </>\n      ) : null}\n\n      {list.slice((state.pno - 1) * max, (state.pno - 1) * max + max).map(item)}\n      <nav aria-label=\"Page navigation example\">\n        <ul className=\"pagination justify-content-center\">\n          <li className={`page-item ${state.pno === 1 ? \"disabled\" : \"\"}`}>\n            <button\n              className=\"page-link\"\n              onClick={() => {\n                scrollTop()\n                setState({ pno: state.pno - 1 })\n              }}\n            >\n              Previous\n            </button>\n          </li>\n          {[...Array(Math.ceil(list.length / max))].map((e, i) => (\n            <li\n              className={`page-item ${state.pno === i + 1 ? \"active\" : \"\"}`}\n              key={'a'+i}\n            >\n              <button\n                className=\"page-link\"\n                data-toggle=\"tooltip\"\n                title={`Page ${i + 1}`}\n                onClick={() => {\n                  scrollTop()\n                  setState({ pno: i + 1 })\n                }}\n              >\n                {i + 1}\n              </button>\n            </li>\n          ))}\n          <li\n            className={`page-item ${\n              state.pno === Math.ceil(list.length / max) ? \"disabled\" : \"\"\n            }`}\n          >\n            <button\n              className=\"page-link\"\n              onClick={() => {\n                scrollTop()\n                setState({ pno: state.pno + 1 })\n              }}\n            >\n              Next\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </>\n  )\n}\n\nexport default PaginationComponent\n","import { Link } from \"gatsby\"\nimport React from \"react\"\n\nexport const redirectController = control => {\n  if (!control) {\n  }\n}\nexport const generateSIGHash = sig_images => {\n  let img_hash = {}\n  sig_images &&\n    sig_images.forEach(element => {\n      img_hash[element.name] = element.childImageSharp.fixed.srcWebp\n    })\n  return img_hash\n}\n\nexport const RenderAuthors = (arr, cls) =>\n  arr.map((name, index2) => (\n    <>\n      <Link\n        key={\"x\" + index2}\n        to={\"/members/\" + name.toLowerCase().split(\" \").join(\"\")}\n      >\n        {name}\n      </Link>\n      {index2 + 2 === arr.length\n        ? \" and\"\n        : index2 + 1 !== arr.length\n        ? \",\"\n        : \"\"}\n    </>\n  ))\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { Link } from \"gatsby\"\nimport { graphql } from \"gatsby\"\nimport { RenderAuthors } from \"../components/helper\"\nimport PaginationComponent from \"../components/partials/pagination\"\n\nexport const SIG = ({ pageContext, pathname, data }) => {\n  const { sig_details, sig_logo, sig_projects } = data\n\n  return (\n    <Layout location={pathname && pathname.location}>\n      <SEO title={sig_details.name} />\n      <main className=\"page blog-post-list\">\n        <section className=\"clean-block clean-blog-list dark\">\n          <div className=\"container\">\n            <div className=\"block-heading\">\n              <Link to={\"/sigs/\" + sig_details.name.toLowerCase()}>\n                <img\n                  src={sig_logo.childImageSharp.fixed.srcWebp}\n                  alt={sig_details.name}\n                  className=\"sig-logo\"\n                  style={{ maxWidth: \"200px\" }}\n                />\n              </Link>\n              <p>{sig_details.description}</p>\n            </div>\n            <div className=\"block-content\">\n              <PaginationComponent\n                max={10}\n                list={sig_projects.nodes}\n                item={(element, index) => (\n                  <div key={index} className=\"clean-blog-post\">\n                    <div className=\"row\">\n                      <div className=\"col-lg-12\">\n                        <h3>\n                          {element.builtBy && element.URL ? (\n                            <Link\n                              to={\n                                \"/projects/\" +\n                                element.title.toLowerCase().split(\" \").join(\"\")\n                              }\n                            >\n                              {element.title}\n                            </Link>\n                          ) : (\n                            element.title\n                          )}\n                        </h3>\n                        {element.builtBy !== null ? (\n                          <>\n                            <div className=\"info\">\n                              <span className=\"text-muted\">\n                                By\n                                {RenderAuthors(element.builtBy, \"\")}\n                              </span>\n                            </div>\n                          </>\n                        ) : null}\n\n                        <p> {element.description} </p>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              />\n            </div>\n          </div>\n        </section>\n      </main>\n    </Layout>\n  )\n}\n\nexport default SIG\n\nexport const postQuery = graphql`\n  query x($pathSlug: String!) {\n    sig_logo: file(\n      sourceInstanceName: { eq: \"sig_logo\" }\n      name: { eq: $pathSlug }\n    ) {\n      childImageSharp {\n        fixed {\n          srcWebp\n        }\n      }\n    }\n    sig_projects: allProjectsYaml(filter: {sig: {eq: $pathSlug}}, sort: {fields: builtBy}) {\n      nodes {\n        title\n        URL\n        builtBy\n        description\n      }\n    }\n    sig_details: sigYaml(name: { eq: $pathSlug }) {\n      name\n      description\n    }\n  }\n`\n"],"sourceRoot":""}