{"version":3,"sources":["webpack://ietnitk/./src/templates/projects-page.js"],"names":["data","pathname","pageContext","location","title","projects","sig","name","className","style","paddingTop","description","to","toLowerCase","logo","src","childImageSharp","fixed","srcWebp","alt","maxWidth","label","authors","map","i","key","split","join","url","URL","hostname","target","rel","href"],"mappings":"0JAmKA,UA7JgB,SAAC,GAAqC,IAAnCA,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAA4B,EAAlBC,YACjC,OACE,gBAAC,IAAD,CAAQC,SAAUF,GAAYA,EAASE,UACrC,gBAAC,IAAD,CACEC,MAAOJ,EAAKK,SAASD,MAAQ,KAAOJ,EAAKK,SAASC,IAAIC,OAExD,wBAAMC,UAAU,uBACd,2BAASA,UAAU,oCACjB,uBAAKA,UAAU,aACb,uBAAKA,UAAU,qBACb,uBAAKA,UAAU,qBACb,sBAAIA,UAAU,eAAeC,MAAO,CAAEC,WAAY,QAC/CV,EAAKK,SAASD,OAEjB,yBAAIJ,EAAKK,SAASM,cAGpB,uBAAKH,UAAU,gCACb,gBAAC,KAAD,CAAMI,GAAI,SAAWZ,EAAKK,SAASC,IAAIC,KAAKM,eACzCb,EAAKK,SAASC,IAAIQ,KACjB,uBACEC,IAAKf,EAAKK,SAASC,IAAIQ,KAAKE,gBAAgBC,MAAMC,QAClDC,IAAKnB,EAAKK,SAASC,IAAIC,KACvBC,UAAU,WACVC,MAAO,CAAEW,SAAU,WAEnB,QAIV,uBAAKZ,UAAU,iBACZR,EAAKK,SAASgB,MACb,uBAAKb,UAAU,4BACZR,EAAKK,SAASgB,OAEf,KACJ,uBAAKb,UAAU,OACb,uBAAKA,UAAU,YACb,sCACA,0BACGR,EAAKK,SAASiB,SACbtB,EAAKK,SAASiB,QAAQC,KAAI,WAAWC,GAAX,IAAGjB,EAAH,EAAGA,KAAH,OACxB,sBAAIkB,IAAKD,GACP,gBAAC,KAAD,CACEZ,GACE,YACAL,EAAKM,cAAca,MAAM,KAAKC,KAAK,KAGpCpB,SAMb,uBAAKC,UAAU,uBACZR,EAAKK,SAASuB,KACyB,eAAxC,IAAIC,IAAI7B,EAAKK,SAASuB,KAAKE,SACzB,qBACEC,OAAO,SACPC,IAAI,aACJC,KAAMjC,EAAKK,SAASuB,IACpBpB,UAAU,wBAEV,qBAAGA,UAAU,sBANf,mBASA,qBACEuB,OAAO,SACPC,IAAI,aACJC,KAAMjC,EAAKK,SAASuB,IACpBpB,UAAU,mBAEV,qBAAGA,UAAU,eANf","file":"component---src-templates-projects-page-js-fbaa0baf7f374f3895f0.js","sourcesContent":["import { Link } from \"gatsby\"\nimport React from \"react\"\nimport Layout from \"../components/layout\"\nimport SearchEngineOps from \"../components/seo\"\nimport { graphql } from \"gatsby\"\n\nconst Project = ({ data, pathname, pageContext }) => {\n  return (\n    <Layout location={pathname && pathname.location}>\n      <SearchEngineOps\n        title={data.projects.title + \" @\" + data.projects.sig.name}\n      />\n      <main className=\"page blog-post-list\">\n        <section className=\"clean-block clean-blog-list dark\">\n          <div className=\"container\">\n            <div className=\"block-heading row\">\n              <div className=\"col-lg-9 col-md-9\">\n                <h2 className=\"text-primary\" style={{ paddingTop: \"1em\" }}>\n                  {data.projects.title}\n                </h2>\n                <p>{data.projects.description}</p>\n              </div>\n\n              <div className=\"col-lg-3 col-md-3 text-right\">\n                <Link to={\"/sigs/\" + data.projects.sig.name.toLowerCase()}>\n                  {data.projects.sig.logo ? (\n                    <img\n                      src={data.projects.sig.logo.childImageSharp.fixed.srcWebp}\n                      alt={data.projects.sig.name}\n                      className=\"sig-logo\"\n                      style={{ maxWidth: \"200px\" }}\n                    />\n                  ) : null}\n                </Link>\n              </div>\n            </div>\n            <div className=\"block-content\">\n              {data.projects.label ? (\n                <div className=\"mb-2 badge badge-primary\">\n                  {data.projects.label}\n                </div>\n              ) : null}\n              <div className=\"row\">\n                <div className=\"col-lg-6\">\n                  <h4>Built by</h4>\n                  <ul>\n                    {data.projects.authors &&\n                      data.projects.authors.map(({ name }, i) => (\n                        <li key={i}>\n                          <Link\n                            to={\n                              \"/members/\" +\n                              name.toLowerCase().split(\" \").join(\"\")\n                            }\n                          >\n                            {name}\n                          </Link>\n                        </li>\n                      ))}\n                  </ul>\n                </div>\n                <div className=\"col-lg-6 text-right\">\n                  {data.projects.url &&\n                  new URL(data.projects.url).hostname === \"github.com\" ? (\n                    <a\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                      href={data.projects.url}\n                      className=\"btn btn-outline-dark\"\n                    >\n                      <i className=\"fa fa-github mr-2\" /> Repository URL\n                    </a>\n                  ) : (\n                    <a\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                      href={data.projects.url}\n                      className=\"btn btn-primary\"\n                    >\n                      <i className=\"fa fa-link\" /> Project Link\n                    </a>\n                  )}\n                </div>\n              </div>\n              {/* {data.allFile && data.allFile.nodes.length !== 0 ? (\n                <>\n                  <hr />\n                  <h4>Project Reports</h4>\n                </>\n              ) : null} */}\n\n              {/* {data.allFile &&\n                data.allFile.nodes.map((element, index) => (\n                  <div key={index} className=\"clean-blog-post\">\n                    <div className=\"row\">\n                      <div className=\"col-lg-12\">\n                        <h3>\n                          <Link\n                            className=\"btn-link\"\n                            to={\n                              \"/projects/\" +\n                              data.projectsYaml.title\n                                .toLowerCase()\n                                .split(\" \")\n                                .join(\"\") +\n                              \"/\" +\n                              element.childMarkdownRemark.frontmatter.title\n                                .toLowerCase()\n                                .split(\" \")\n                                .join(\"\")\n                            }\n                          >\n                            {element.childMarkdownRemark.frontmatter.title}\n                          </Link>\n                        </h3>\n                        <div className=\"info\">\n                          <span className=\"text-muted\">\n                            By\n                            {RenderAuthors(\n                              element.childMarkdownRemark.frontmatter.authors,\n                              \"\"\n                            )}\n                            <br />\n                            {moment(element.birthTime).format(\"Do MMMM, YYYY\")}\n                          </span>\n                        </div>\n                        <p> {element.childMarkdownRemark.excerpt} </p>\n                      </div>\n                    </div>\n                  </div>\n                ))} */}\n            </div>\n          </div>\n        </section>\n      </main>\n    </Layout>\n  )\n}\n\nexport const postQuery = graphql`\n  query($pathSlug: String!) {\n    projects: strapiProjects(title: { eq: $pathSlug }) {\n      authors {\n        name\n      }\n      sig {\n        name\n        logo {\n          childImageSharp {\n            fixed {\n              srcWebp\n            }\n          }\n        }\n      }\n      url\n      title\n      description\n      ongoing\n    }\n  }\n`\n\nexport default Project\n"],"sourceRoot":""}