{"version":3,"sources":["webpack:///./src/templates/author-page.js","webpack:///./src/components/helper.js"],"names":["RenderArticles","articles","element","index","key","className","style","paddingBottom","to","relativeDirectory","childMarkdownRemark","frontmatter","title","RenderAuthors","authors","birthTime","excerpt","RenderProject","description","SIG","builtBy","year","ongoing","label","sig","url","toLowerCase","split","join","Author","data","location","member_details","member_projects","member_articles","member_reports","pathname","name","position","social","email","placement","delay","show","hide","overlay","props","replace","facebook","target","rel","href","linkedin","github","nodes","map","e","i","generateSIGHash","sig_images","img_hash","forEach","childImageSharp","fixed","srcWebp","arr","cls","index2","length"],"mappings":"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","file":"component---src-templates-author-page-js-3ae7b1eca05a3e9efbad.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { graphql, Link } from \"gatsby\"\nimport { RenderAuthors } from \"../components/helper\"\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\"\nconst RenderArticles = ({ articles, element, index }) => (\n  <div\n    key={index}\n    className=\"clean-blog-post\"\n    style={{ paddingBottom: \"35px\" }}\n  >\n    <div className=\"row\">\n      <div className=\"col-lg-12\">\n        <h3>\n          <Link className=\"btn-link\" to={\"/blog/\" + element.relativeDirectory}>\n            {element.childMarkdownRemark.frontmatter.title}\n          </Link>\n        </h3>\n        <div className=\"info\">\n          <span className=\"text-muted\">\n            By\n            {RenderAuthors(element.childMarkdownRemark.frontmatter.authors, \"\")}\n            <br />\n            {element.birthTime}\n          </span>\n        </div>\n        <p> {element.childMarkdownRemark.excerpt} </p>\n      </div>\n    </div>\n  </div>\n)\n\nconst RenderProject = ({\n  title,\n  SIG,\n  description,\n  builtBy,\n  ongoing,\n  year,\n  label,\n  sig,\n  url,\n}) => {\n  return (\n    <div className=\"clean-blog-post\" style={{ paddingBottom: \"35px\" }}>\n      <div className=\"row\">\n        <div className=\"col-lg-12\">\n          <h3>\n            {url ? (\n              <Link to={\"/projects/\" + title.toLowerCase().split(\" \").join(\"\")}>\n                {title} {year ? `(${year})` : null}\n              </Link>\n            ) : (\n              <>\n                {title} {year ? `(${year})` : null}\n              </>\n            )}\n          </h3>\n          {label ? (\n            <div className=\"badge badge-primary mr-2\">{label}</div>\n          ) : null}\n          {sig ? (\n            <Link\n              to={\"/sigs/\" + sig.toLowerCase()}\n              className=\"badge badge-info text-uppercase\"\n            >\n              {sig}\n            </Link>\n          ) : null}\n          <div className=\"info\">\n            <span className=\"text-muted\">\n              By\n              {RenderAuthors(builtBy, \"\")}\n            </span>\n          </div>\n          <p> {description} </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport const Author = ({ data, location }) => {\n  const {\n    member_details,\n    member_projects,\n    member_articles,\n    member_reports,\n  } = data\n\n  return (\n    <Layout location={location.pathname}>\n      <SEO title={\"About \" + member_details.name} />\n      <main className=\"page blog-post-list\">\n        <section className=\"clean-block clean-blog-list dark\">\n          <div className=\"container-fluid\">\n            <div className=\"block-content\">\n              <div className=\"row\">\n                <div className=\"col-lg-3 col-md-3 col-sm-12\">\n                  <div className=\"card\">\n                    <div className=\"card-body\">\n                      <div className=\"text-center mt-4\">\n                        <h5 className=\"text-primary\">{member_details.name}</h5>\n                        <h6>{member_details.position}</h6>\n                        <p>\n                          {member_details.social &&\n                          member_details.social.email ? (\n                            <OverlayTrigger\n                              placement=\"bottom\"\n                              delay={{ show: 250, hide: 400 }}\n                              overlay={props => (\n                                <Tooltip {...props}>{member_details.social.email.replace(\"@\",\" [at] \").split(\".\").join(\" [dot] \")}</Tooltip>\n                              )}\n                            >\n                              <i className=\"fa fa-envelope text-primary\" />\n                            </OverlayTrigger>\n                          ) : null}\n                          {member_details.social &&\n                          member_details.social.facebook ? (\n                            <a\n                              target=\"_blank\"\n                              rel=\"noreferrer\"\n                              className=\"mr-1 ml-1\"\n                              href={`https://www.facebook.com/${member_details.social.facebook}`}\n                            >\n                              &nbsp;\n                              <i className=\"fa fa-facebook\" />\n                            </a>\n                          ) : null}\n                          {member_details.social &&\n                          member_details.social.linkedin ? (\n                            <a\n                              target=\"_blank\"\n                              rel=\"noreferrer\"\n                              className=\"mr-1 ml-1\"\n                              href={`https://www.linkedin.com/in/${member_details.social.linkedin}`}\n                            >\n                              &nbsp;\n                              <i className=\"fa fa-linkedin\" />\n                            </a>\n                          ) : null}\n                          {member_details.social &&\n                          member_details.social.github ? (\n                            <a\n                              target=\"_blank\"\n                              rel=\"noreferrer\"\n                              className=\"mr-1 ml-1\"\n                              href={`https://www.github.com/${member_details.social.github}`}\n                            >\n                              &nbsp;\n                              <i className=\"fa fa-github\" />\n                            </a>\n                          ) : null}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-lg-9 col-md-9 col-sm-12\">\n                  <div\n                    className=\"card clean-blog-post mb-3\"\n                    style={{ paddingBottom: \"10px\" }}\n                  >\n                    <div className=\"card-body\">\n                      <div className=\"card-title\">\n                        <h4>Projects</h4>\n                      </div>\n                      {member_projects.nodes.map((e, i) => (\n                        <RenderProject {...e} />\n                      ))}\n                    </div>\n                  </div>\n                  <div\n                    className=\"card clean-blog-post mb-3\"\n                    style={{ paddingBottom: \"10px\" }}\n                  >\n                    <div className=\"card-body\">\n                      <div className=\"card-title\">\n                        <h4>Blog Articles</h4>\n                      </div>\n                      {member_articles.nodes.map((e, i) => (\n                        <RenderArticles element={e} index={i} />\n                      ))}\n                    </div>\n                  </div>\n\n                  <div\n                    className=\"card clean-blog-post mb-3\"\n                    style={{ paddingBottom: \"10px\" }}\n                  >\n                    <div className=\"card-body\">\n                      <div className=\"card-title\">\n                        <h4>Project Reports</h4>\n                      </div>\n                      {member_reports.nodes.map((e, i) => (\n                        <RenderArticles element={e} index={i} />\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </main>\n    </Layout>\n  )\n}\n\nexport const postQuery = graphql`\n  query($pathSlug: [String]) {\n    member_details: authorsYaml(name: { in: $pathSlug }) {\n      name\n      position\n      passoutYr\n      social {\n        email\n        github\n        linkedin\n        facebook\n      }\n    }\n    member_projects: allProjectsYaml(\n      filter: { builtBy: { in: $pathSlug } }\n      sort: { fields: title }\n    ) {\n      nodes {\n        builtBy\n        title\n        sig\n        year\n        label\n        description\n        url\n      }\n    }\n    member_reports: allFile(\n      filter: {\n        childMarkdownRemark: { frontmatter: { authors: { in: $pathSlug } } }\n        sourceInstanceName: { eq: \"project-reports\" }\n        extension: { eq: \"md\" }\n      }\n      sort: { fields: childMarkdownRemark___frontmatter___title }\n    ) {\n      nodes {\n        childMarkdownRemark {\n          frontmatter {\n            authors\n            date(formatString: \"MMMM Do, YYYY\")\n            title\n          }\n          excerpt\n        }\n      }\n    }\n    member_articles: allFile(\n      filter: {\n        childMarkdownRemark: { frontmatter: { authors: { in: $pathSlug } } }\n        sourceInstanceName: { eq: \"blog\" }\n        extension: { eq: \"md\" }\n      }\n      sort: { fields: childMarkdownRemark___frontmatter___title }\n    ) {\n      nodes {\n        relativeDirectory\n        childMarkdownRemark {\n          frontmatter {\n            authors\n            date(formatString: \"MMMM Do, YYYY\")\n            title\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\nexport default Author\n","import { Link } from \"gatsby\"\nimport React from \"react\"\n\nexport const redirectController = control => {\n  if (!control) {\n  }\n}\nexport const generateSIGHash = sig_images => {\n  let img_hash = {}\n  sig_images &&\n    sig_images.forEach(element => {\n      img_hash[element.name] = element.childImageSharp.fixed.srcWebp\n    })\n  return img_hash\n}\n\nexport const RenderAuthors = (arr, cls) =>\n  arr.map((name, index2) => (\n    <>\n      &nbsp;\n      <Link\n        key={\"x\" + index2}\n        to={\"/members/\" + name.toLowerCase().split(\" \").join(\"\")}\n      >\n        {name}\n      </Link>\n      {index2 + 2 === arr.length\n        ? \" and\"\n        : index2 + 1 !== arr.length\n        ? \",\"\n        : \"\"}\n    </>\n  ))\n"],"sourceRoot":""}