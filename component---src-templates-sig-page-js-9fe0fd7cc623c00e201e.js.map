{"version":3,"sources":["webpack://ietnitk/./src/components/partials/pagination.js","webpack://ietnitk/./src/templates/sig-page.js"],"names":["scrollTop","document","body","documentElement","max","list","item","noneMessage","filterBy","filterLabel","useState","pno","list_state","filterType","filterCategories","Set","map","e","state","setState","length","className","variant","id","size","ex","i","name","key","onClick","event","filter","target","slice","aria-label","Array","Math","ceil","data-toggle","title","pageContext","pathname","data","uri","sig_details","sig_projects","location","to","toLowerCase","src","logo","childImageSharp","fixed","srcWebp","alt","style","maxWidth","description","nodes","element","index","authors","url","split","join","label","RenderAuthors","currentRoute"],"mappings":"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","file":"component---src-templates-sig-page-js-9fe0fd7cc623c00e201e.js","sourcesContent":["import React, { useState } from \"react\"\nimport Dropdown from \"react-bootstrap/Dropdown\"\n\nfunction scrollTop() {\n  if (document.body.scrollTop !== 0) {\n    document.body.scrollTop = 0\n  } else {\n    document.documentElement.scrollTop = 0\n  }\n}\nconst PaginationComponent = ({\n  max,\n  list,\n  item,\n  noneMessage,\n  filterBy,\n  filterLabel,\n}) => {\n  const [state, setState] = useState({\n    pno: 1,\n    list_state: list,\n    filterType: null,\n    filterCategories: [...new Set(list.map(e => e[filterBy]))],\n  })\n\n  if (state.list_state && state.list_state.length === 0) {\n    return <div className=\"text-center\">{noneMessage}</div>\n  }\n\n  return (\n    <>\n      {filterBy && state.list_state ? (\n        <Dropdown>\n          <Dropdown.Toggle\n            className=\"mr-4\"\n            variant=\"outline-primary\"\n            id={\"dropdown-\" + filterBy}\n            size=\"sm\"\n          >\n            {state.filterType ? state.filterType : filterLabel}\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            {state.filterCategories &&\n              state.filterCategories.map((ex, i) => (\n                <Dropdown.Item\n                  name={ex}\n                  key={i}\n                  onClick={event =>\n                    setState({\n                      ...state,\n                      list_state: list.filter(e => {\n                        return e[filterBy] === event.target.name\n                      }),\n                      filterType: event.target.name,\n                    })\n                  }\n                >\n                  {ex}\n                </Dropdown.Item>\n              ))}\n            {state.filterType ? (\n              <Dropdown.Item\n                onClick={event => {\n                  setState({\n                    ...state,\n                    list_state: list,\n                    filterType: null,\n                  })\n                }}\n              >\n                Clear Filters\n              </Dropdown.Item>\n            ) : null}\n          </Dropdown.Menu>\n          {state.list_state.length} Items\n          <hr />\n        </Dropdown>\n      ) : null}\n\n      {state.pno !== 1 ? (\n        <>\n          <h6 className=\"text-primary\">Page {state.pno}</h6>\n          <hr />\n          <br />\n        </>\n      ) : null}\n\n      {state.list_state &&\n        state.list_state\n          .slice((state.pno - 1) * max, (state.pno - 1) * max + max)\n          .map(item)}\n      <nav aria-label=\"Page navigation example\">\n        <ul className=\"pagination justify-content-center\">\n          <li className={`page-item ${state.pno === 1 ? \"disabled\" : \"\"}`}>\n            <button\n              className=\"page-link\"\n              onClick={() => {\n                scrollTop()\n                setState({ ...state, pno: state.pno - 1 })\n              }}\n            >\n              Previous\n            </button>\n          </li>\n          {state.list_state &&\n            [...Array(Math.ceil(state.list_state.length / max))].map((e, i) => (\n              <li\n                className={`page-item ${state.pno === i + 1 ? \"active\" : \"\"}`}\n                key={i}\n              >\n                <button\n                  className=\"page-link\"\n                  data-toggle=\"tooltip\"\n                  title={`Page ${i + 1}`}\n                  onClick={() => {\n                    scrollTop()\n                    setState({ ...state, pno: i + 1 })\n                  }}\n                >\n                  {i + 1}\n                </button>\n              </li>\n            ))}\n          <li\n            className={`page-item ${\n              state.list_state &&\n              state.pno === Math.ceil(state.list_state.length / max)\n                ? \"disabled\"\n                : \"\"\n            }`}\n          >\n            <button\n              className=\"page-link\"\n              onClick={() => {\n                scrollTop()\n                setState({ ...state, pno: state.pno + 1 })\n              }}\n            >\n              Next\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </>\n  )\n}\n\nexport default PaginationComponent\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SearchEngineOps from \"../components/seo\"\nimport { Link } from \"gatsby\"\nimport { graphql } from \"gatsby\"\nimport { RenderAuthors } from \"../components/helper\"\nimport PaginationComponent from \"../components/partials/pagination\"\nimport Glimpse from \"../components/partials/glimpse\"\n\nconst SIG = ({ pageContext, pathname, data, uri }) => {\n  const { sig_details, sig_projects } = data\n  return (\n    <Layout location={pathname && pathname.location}>\n      <SearchEngineOps title={sig_details.name} />\n      <main className=\"page blog-post-list\">\n        <section className=\"clean-block clean-blog-list dark\">\n          <div className=\"container\">\n            <div className=\"block-heading\">\n              <Link to={\"/sigs/\" + sig_details.name.toLowerCase()}>\n                <img\n                  src={sig_details.logo.childImageSharp.fixed.srcWebp}\n                  alt={sig_details.name}\n                  className=\"sig-logo\"\n                  style={{ maxWidth: \"200px\" }}\n                />\n              </Link>\n              <p>{sig_details.description}</p>\n            </div>\n            <div className=\"block-content\">\n              <PaginationComponent\n                max={10}\n                list={sig_projects.nodes}\n                item={(element, index) => (\n                  <div key={index} className=\"clean-blog-post\">\n                    <div className=\"row\">\n                      <div className=\"col-lg-12\">\n                        <h3>\n                          {element.authors && element.url ? (\n                            <Link\n                              to={\n                                \"/projects/\" +\n                                element.title.toLowerCase().split(\" \").join(\"\")\n                              }\n                            >\n                              {element.title}\n                            </Link>\n                          ) : (\n                            element.title\n                          )}\n                        </h3>\n                        {element.label ? (\n                          <div className=\"badge badge-primary\">\n                            {element.label}\n                          </div>\n                        ) : null}\n                        {element.authors !== null ? (\n                          <>\n                            <div className=\"info\">\n                              <span className=\"text-muted\">\n                                By\n                                {RenderAuthors(element.authors, \"\")}\n                              </span>\n                            </div>\n                          </>\n                        ) : null}\n\n                        <p> {element.description} </p>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              />\n            </div>\n          </div>\n        </section>\n      </main>\n      <Glimpse currentRoute={uri} />\n    </Layout>\n  )\n}\n\nexport default SIG\n\nexport const postQuery = graphql`\n  query sigpage($pathSlug: String!) {\n    sig_projects: allStrapiProjects(\n      filter: { sig: { name: { eq: $pathSlug } } }\n      sort: { fields: authors___name }\n    ) {\n      nodes {\n        description\n        title\n        url\n        authors {\n          name\n        }\n      }\n    }\n    sig_details: strapiSigs(name: { eq: $pathSlug }) {\n      name\n      description\n      logo {\n        childImageSharp {\n          fixed {\n            srcWebp\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}