{"version":3,"sources":["webpack://ietnitk/./src/assets/img/beach.jpg","webpack://ietnitk/./src/pages/about.js"],"names":["KEY_ALUMNI","KEY_EXEC_MEMBERS","KEY_CURR_CORE","MemberDetails","author","index","color_bg","position","alumni","color_text","to","name","toLowerCase","split","join","className","style","paddingBottom","id","key","boxShadow","social","email","OverlayTrigger","placement","delay","show","hide","overlay","props","Tooltip","replace","facebook","target","rel","href","linkedin","github","location","data","useState","category","setCategory","members_hsx","members","nodes","filter","mem","passouts","group","map","e","fieldValue","passoutYr","parseInt","pathname","title","marginTop","alt","src","Img_Beach","width","height","about","info","Nav","variant","justify","activeKey","NavDropdown","length","onClick","eventKey"],"mappings":"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","file":"component---src-pages-about-js-7866967f8f57cbd8c827.js","sourcesContent":["export default __webpack_public_path__ + \"static/beach-1dbbeff35ed27b113cde05746831685e.jpg\";","import React, { useState } from \"react\"\nimport Layout from \"../components/layout\"\nimport SearchEngineOps from \"../components/seo\"\nimport { Link } from \"gatsby\"\nimport { graphql } from \"gatsby\"\nimport Img_Beach from \"../assets/img/beach.jpg\"\nimport { Nav, NavDropdown, OverlayTrigger, Tooltip } from \"react-bootstrap\"\nimport { OutboundLink } from \"gatsby-plugin-google-analytics\"\n\nconst KEY_ALUMNI = \"Alumni\"\nconst KEY_EXEC_MEMBERS = \"Executive Members 2021\"\nconst KEY_CURR_CORE = \"Core 2021\"\n\nconst MemberDetails = ({ author, index }) => {\n  let color_bg =\n    author.position !== \"Executive Member\" && author.alumni !== true\n      ? \"bg-gradient-primary\"\n      : author.alumni !== true\n      ? \"\"\n      : \"bg-gradient-alumni\"\n  let color_text =\n    author.position !== \"Executive Member\" || author.alumni === true\n      ? \"text-light\"\n      : \"\"\n  return (\n    <div\n      to={`/members/${author.name.toLowerCase().split(\" \").join(\"\")}`}\n      className=\"col-sm-6 col-md-4 col-lg-3\"\n      style={{ paddingBottom: \"3em\" }}\n      id={author.name}\n      key={index}\n    >\n      <div\n        className={`h-100 card clean-card text-center  ${color_bg}`}\n        style={{ boxShadow: \"0px 0px 32px 0px rgba(221, 230, 237, 0.4)\" }}\n        id={author.name}\n      >\n        <div className=\"card-body info\">\n          <Link\n            to={`/members/${author.name.toLowerCase().split(\" \").join(\"\")}`}\n          >\n            <h5 className={`card-title text-capitalize ${color_text}`}>\n              {author.name}\n            </h5>\n          </Link>\n          <p className={`card-text text-capitalize ${color_text}`}>\n            {author.position}\n          </p>\n          <div className=\"icon\">\n            {author.social && author.social.email ? (\n              <OverlayTrigger\n                placement=\"bottom\"\n                delay={{ show: 250, hide: 400 }}\n                overlay={props => (\n                  <Tooltip {...props}>\n                    {author.social.email\n                      .replace(\"@\", \" [at] \")\n                      .split(\".\")\n                      .join(\" [dot] \")}\n                  </Tooltip>\n                )}\n              >\n                <i className={`fa fa-envelope ${color_text}`} />\n              </OverlayTrigger>\n            ) : null}\n            {author.social && author.social.facebook ? (\n              <OutboundLink\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                className=\"mr-1 ml-1\"\n                href={\"https://www.facebook.com/\" + author.social.facebook}\n              >\n                &nbsp;\n                <i className={`fa fa-facebook ${color_text}`} />\n              </OutboundLink>\n            ) : null}\n            {author.social && author.social.linkedin ? (\n              <OutboundLink\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                className=\"mr-1 ml-1\"\n                href={\"https://www.linkedin.com/in/\" + author.social.linkedin}\n              >\n                &nbsp;\n                <i className={`fa fa-linkedin ${color_text}`} />\n              </OutboundLink>\n            ) : null}\n            {author.social && author.social.github ? (\n              <OutboundLink\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                className=\"mr-1 ml-1\"\n                href={\"https://www.github.com/\" + author.social.github}\n              >\n                &nbsp;\n                <i className={`fa fa-github ${color_text}`} />\n              </OutboundLink>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst About = ({ location, data }) => {\n  const [category, setCategory] = useState(KEY_CURR_CORE)\n  let members_hsx = {\n    [KEY_CURR_CORE]: data.members.nodes.filter(\n      mem => mem.position !== \"Executive Member\" && mem.alumni !== true\n    ),\n    [KEY_EXEC_MEMBERS]: data.members.nodes.filter(\n      mem => mem.position === \"Executive Member\" && mem.alumni !== true\n    ),\n  }\n  data.passouts.group.map(\n    e =>\n      (members_hsx[KEY_ALUMNI + \"-\" + e.fieldValue] = data.members.nodes.filter(\n        mem => mem.alumni === true && mem.passoutYr === parseInt(e.fieldValue)\n      ))\n  )\n  return (\n    <Layout location={location.pathname} title={\"About Us\"}>\n      <SearchEngineOps title=\"About Us\" />\n      <main className=\"page\">\n        <section className=\"clean-block about-us\">\n          <div className=\"container\" style={{ marginTop: \"5em\" }}>\n            <div className=\"card-body info\">\n              <div className=\"card-text\">\n                <div className=\"row justify-content-center\">\n                  <div className=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n                    <img\n                      alt=\"\"\n                      src={Img_Beach}\n                      style={{ width: \"100%\", height: \"auto\" }}\n                    />\n                  </div>\n                  <div className=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n                    <h2 className=\"text-primary\">About Us</h2>\n\n                    <p>{data.about.info}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n        <section className=\"clean-block about-us\">\n          <div className=\"container\">\n            <div className=\"block-heading\">\n              <h2 className=\"text-primary\">Our Family</h2>\n            </div>\n            <Nav\n              className=\"mb-5\"\n              variant=\"pills\"\n              justify={true}\n              activeKey={category}\n            >\n              <NavDropdown\n                title={\n                  category.split(\"-\").length > 1\n                    ? \"Batch of \" + category.split(\"-\")[1]\n                    : KEY_ALUMNI\n                }\n              >\n                {data.passouts.group.map(e => (\n                  <NavDropdown.Item\n                    onClick={() => setCategory(KEY_ALUMNI + \"-\" + e.fieldValue)}\n                    eventKey={e.fieldValue}\n                  >\n                    Batch of {e.fieldValue}\n                  </NavDropdown.Item>\n                ))}\n              </NavDropdown>\n              <Nav.Item>\n                <Nav.Link\n                  onClick={() => setCategory(KEY_CURR_CORE)}\n                  eventKey={KEY_CURR_CORE}\n                >\n                  {KEY_CURR_CORE}\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link\n                  eventKey={KEY_EXEC_MEMBERS}\n                  title={KEY_EXEC_MEMBERS}\n                  onClick={() => setCategory(KEY_EXEC_MEMBERS)}\n                >\n                  {KEY_EXEC_MEMBERS}\n                </Nav.Link>\n              </Nav.Item>\n            </Nav>\n\n            <div className=\"row justify-content-center\">\n              {members_hsx[category].map((author, index) => (\n                <MemberDetails author={author} key={index} />\n              ))}\n            </div>\n          </div>\n        </section>\n      </main>\n    </Layout>\n  )\n}\n\nexport default About\n\nexport const postQuery = graphql`\n  {\n    members: allStrapiMembers(sort: { order: ASC, fields: rank }) {\n      nodes {\n        alumni\n        passoutYr\n        position\n        name\n        social: contacts {\n          facebook\n          github\n          email\n          linkedin\n        }\n      }\n    }\n    about: strapiAboutClub {\n      info: about_us\n    }\n    passouts: allStrapiMembers {\n      group(field: passoutYr) {\n        fieldValue\n      }\n    }\n  }\n`\n"],"sourceRoot":""}