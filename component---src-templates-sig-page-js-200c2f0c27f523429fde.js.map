{"version":3,"file":"component---src-templates-sig-page-js-200c2f0c27f523429fde.js","mappings":"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","sources":["webpack://ietnitk/./src/elements/pagination.js","webpack://ietnitk/./src/layouts/information.js","webpack://ietnitk/./src/templates/sig-page.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport { useLocation } from \"@reach/router\";\n\nfunction scrollTop() {\n  if (document.body.scrollTop !== 0) {\n    document.body.scrollTop = 0;\n  } else {\n    document.documentElement.scrollTop = 0;\n  }\n}\nconst PaginationComponent = ({\n  max,\n  list,\n  item,\n  noneMessage,\n  filterBy,\n  filterLabel,\n}) => {\n  const location = useLocation();\n  console.log(location);\n  const [state, setState] = useState({\n    pno: 1,\n    listState: list,\n    filterType: null,\n    // eslint-ignore-next-line\n    filterCategories: [...new Set(list.map((element) => element[filterBy]))],\n  });\n\n  if (state.listState && state.listState.length === 0) {\n    return <div className=\"text-center\">{noneMessage}</div>;\n  }\n\n  return (\n    <>\n      {filterBy && state.listState ? (\n        <Dropdown>\n          <Dropdown.Toggle\n            className=\"mr-4\"\n            id={`dropdown-${filterBy}`}\n            size=\"sm\"\n            variant=\"outline-primary\"\n          >\n            {state.filterType ? state.filterType : filterLabel}\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            {state.filterCategories &&\n              state.filterCategories.map(({ ex }, index) => (\n                <Dropdown.Item\n                  key={index}\n                  name={ex}\n                  onClick={(event) =>\n                    setState({\n                      ...state,\n                      listState: list.filter((element) => {\n                        return element[filterBy] === event.target.name;\n                      }),\n                      filterType: event.target.name,\n                    })\n                  }\n                >\n                  {ex}\n                </Dropdown.Item>\n              ))}\n            {state.filterType ? (\n              <Dropdown.Item\n                onClick={() => {\n                  setState({\n                    ...state,\n                    listState: list,\n                    filterType: null,\n                  });\n                }}\n              >\n                Clear Filters\n              </Dropdown.Item>\n            ) : null}\n          </Dropdown.Menu>\n          {state.listState.length} Items\n          <hr />\n        </Dropdown>\n      ) : null}\n\n      {state.pno !== 1 ? (\n        <>\n          <h6 className=\"text-primary\">Page {state.pno}</h6>\n          <hr />\n          <br />\n        </>\n      ) : null}\n\n      {state.listState &&\n        state.listState\n          .slice((state.pno - 1) * max, (state.pno - 1) * max + max)\n          .map(item)}\n      <nav aria-label=\"Page navigation example\">\n        <ul className=\"pagination justify-content-center\">\n          <li className={`page-item ${state.pno === 1 ? \"disabled\" : \"\"}`}>\n            <button\n              className=\"page-link\"\n              onClick={() => {\n                scrollTop();\n                setState({ ...state, pno: state.pno - 1 });\n              }}\n            >\n              <i className=\"fa pt-0 mr-2 fa-angle-double-left\" /> Previous\n            </button>\n          </li>\n          {state.listState &&\n            [...Array(Math.ceil(state.listState.length / max))].map(\n              (element, index) => (\n                <li\n                  className={`page-item ${\n                    state.pno === index + 1 ? \"active\" : \"\"\n                  }`}\n                  key={index}\n                >\n                  <button\n                    className=\"page-link\"\n                    data-toggle=\"tooltip\"\n                    onClick={() => {\n                      scrollTop();\n                      if (typeof window !== \"undefined\") {\n                        document.location.search=`?p=${index+1}`;\n                      }\n                      setState({ ...state, pno: index + 1 });\n                    }}\n                    title={`Page ${index + 1}`}\n                  >\n                    {index + 1}\n                  </button>\n                </li>\n              )\n            )}\n          <li\n            className={`page-item ${\n              state.listState &&\n              state.pno === Math.ceil(state.listState.length / max)\n                ? \"disabled\"\n                : \"\"\n            }`}\n          >\n            <button\n              className=\"page-link\"\n              onClick={() => {\n                scrollTop();\n                setState({ ...state, pno: state.pno + 1 });\n              }}\n            >\n              Next <i className=\"fa pt-0 ml-2 fa-angle-double-right\" />\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </>\n  );\n};\n\nexport default PaginationComponent;\n","import React from \"react\";\nimport Glimpse from \"../elements/glimpse\";\nimport Layout from \"./main/main\";\n\nconst InformationLayout = ({ location, children, showFooter = true, uri }) => {\n  return (\n    <Layout location={location} showFooter={showFooter}>\n      <main className=\"page blog-post-list\">\n        <section className=\"clean-block clean-blog-list dark\">\n          <div className=\"container\">\n            {children}\n          </div>\n        </section></main>\n\n      <Glimpse currentRoute={uri} />\n    </Layout>\n  );\n};\nexport default InformationLayout; ","import React from \"react\";\nimport SearchEngineOps from \"../elements/seo\";\nimport { Link, graphql } from \"gatsby\";\nimport { lcrs, renderAuthors } from \"../elements/helper\";\nimport PaginationComponent from \"../elements/pagination\";\nimport InformationLayout from \"../layouts/information\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nconst SIG = ({ pathname, data, uri }) => {\n  const { sigDetails, sigProjects } = data;\n  return (\n    <InformationLayout location={pathname && pathname.location} uri={uri}>\n      <SearchEngineOps title={sigDetails.name} />\n            <div className=\"block-heading\">\n              <Link to={`/sigs/${  sigDetails.name.toLowerCase()}`}>\n                <GatsbyImage\n                  alt={sigDetails.name}\n                  className=\"sig-logo\"\n                  image={getImage(sigDetails.logo.localFile)}\n                  style={{ maxWidth: \"200px\" }}\n                />\n              </Link>\n              <p>{sigDetails.description}</p>\n            </div>\n            <div className=\"block-content\">\n              <PaginationComponent\n                item={(element, index) => (\n                  <div className=\"clean-blog-post\" key={index}>\n                    <div className=\"row\">\n                      <div className=\"col-lg-12\">\n                        <h3>\n                          {element.authors && element.url ? (\n                            <Link\n                              to={\n                                `/projects/${ \n                                lcrs(element.title)}`}\n                            >\n                              {element.title}\n                            </Link>\n                          ) : (\n                            element.title\n                          )}\n                        </h3>\n                        {element.label ? (\n                          <div className=\"badge badge-primary\">\n                            {element.label}\n                          </div>\n                        ) : null}\n                        {element.authors.length ? (\n                          <div className=\"info\">\n                              <span className=\"text-muted\">\n                                By\n                                {renderAuthors(element.authors, \"\")}\n                              </span>\n                            </div>\n                        ) : null}\n\n                        <p> {element.description} </p>\n                      </div>\n                    </div>\n                  </div>\n                )}\n                list={sigProjects.nodes}\n                max={10}\n              />\n            </div>\n    </InformationLayout>\n  );\n};\n\nexport default SIG;\n\nexport const postQuery = graphql`\n  query sigpage($pathSlug: String!) {\n    sigProjects: allStrapiProjects(\n      filter: { sig: { name: { eq: $pathSlug } } }\n      sort: { fields: authors___name }\n    ) {\n      nodes {\n        description\n        title\n        url\n        authors {\n          name\n        }\n      }\n    }\n    sigDetails: strapiSigs(name: { eq: $pathSlug }) {\n      name\n      description\n      logo {\n        localFile {\n          childImageSharp {\n            gatsbyImageData(width: 200, placeholder: BLURRED)\n          \n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["scrollTop","document","body","documentElement","max","list","item","noneMessage","filterBy","filterLabel","location","useLocation","console","log","useState","pno","listState","filterType","filterCategories","Set","map","element","state","setState","length","className","id","size","variant","index","ex","key","name","onClick","event","filter","target","slice","Array","Math","ceil","window","search","title","children","showFooter","uri","currentRoute","pathname","data","sigDetails","sigProjects","to","toLowerCase","G","alt","image","getImage","logo","localFile","style","maxWidth","description","authors","url","lcrs","label","renderAuthors","nodes"],"sourceRoot":""}