{"version":3,"sources":["webpack:///./src/components/partials/pagination.js","webpack:///./src/pages/events.js"],"names":["scrollTop","document","body","documentElement","PaginationComponent","max","list","item","noneMessage","useState","pno","state","setState","length","className","slice","map","aria-label","onClick","Array","Math","ceil","e","i","key","data-toggle","title","Events","data","location","pathname","allFile","nodes","element","index","childMarkdownRemark","frontmatter","date","excerpt","to","relativeDirectory","type"],"mappings":"gIAEA,SAASA,IACyB,IAA5BC,SAASC,KAAKF,UAChBC,SAASC,KAAKF,UAAY,EAE1BC,SAASE,gBAAgBH,UAAY,EA0E1BI,IAvEa,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAAkB,EACtCC,mBAAS,CACjCC,IAAK,IADAC,EADyD,KAClDC,EADkD,KAIhE,OAAoB,IAAhBN,EAAKO,OACA,yBAAKC,UAAU,eAAeN,GAIrC,oCACiB,IAAdG,EAAMD,IACL,oCACE,wBAAII,UAAU,gBAAd,QAAmCH,EAAMD,KACzC,6BACA,8BAEA,KAEHJ,EAAKS,OAAOJ,EAAMD,IAAM,GAAKL,GAAMM,EAAMD,IAAM,GAAKL,EAAMA,GAAKW,IAAIT,GACpE,yBAAKU,aAAW,2BACd,wBAAIH,UAAU,qCACZ,wBAAIA,UAAS,cAA6B,IAAdH,EAAMD,IAAY,WAAa,KACzD,4BACEI,UAAU,YACVI,QAAS,WACPlB,IACAY,EAAS,CAAEF,IAAKC,EAAMD,IAAM,MAJhC,aAUD,YAAIS,MAAMC,KAAKC,KAAKf,EAAKO,OAASR,KAAOW,KAAI,SAACM,EAAGC,GAAJ,OAC5C,wBACET,UAAS,cAAeH,EAAMD,MAAQa,EAAI,EAAI,SAAW,IACzDC,IAAK,IAAID,GAET,4BACET,UAAU,YACVW,cAAY,UACZC,MAAK,SAAUH,EAAI,GACnBL,QAAS,WACPlB,IACAY,EAAS,CAAEF,IAAKa,EAAI,MAGrBA,EAAI,OAIX,wBACET,UAAS,cACPH,EAAMD,MAAQU,KAAKC,KAAKf,EAAKO,OAASR,GAAO,WAAa,KAG5D,4BACES,UAAU,YACVI,QAAS,WACPlB,IACAY,EAAS,CAAEF,IAAKC,EAAMD,IAAM,MAJhC,c,kCChEZ,gFAgFeiB,UA1EA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACtB,OACE,kBAAC,IAAD,CAAQA,SAAUA,EAASC,SAAUJ,MAAO,QAC1C,kBAAC,IAAD,CAAKA,MAAM,WACX,0BAAMZ,UAAU,uBACd,6BAASA,UAAU,oCACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,gBAAd,qBACA,oGAKF,yBAAKA,UAAU,iBACb,kBAAC,IAAD,CACET,IAAK,EAELG,YAAY,yCACZF,KAAMsB,EAAKG,QAAQC,MACnBzB,KAAM,SAAC0B,EAASC,GAAV,OACJ,yBAAKV,IAAKU,EAAOpB,UAAU,mBACzB,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,4BAAKmB,EAAQE,oBAAoBC,YAAYV,OAC7C,yBAAKZ,UAAU,QACb,0BAAMA,UAAU,cACbmB,EAAQE,oBAAoBC,YAAYC,OAG7C,2BAAIJ,EAAQE,oBAAoBG,SAChC,kBAAC,IAAD,CACEC,GAAI,WAAaN,EAAQO,kBACzB1B,UAAU,iCACV2B,KAAK,UAHP","file":"component---src-pages-events-js-ba6c95160fab89e432e9.js","sourcesContent":["import React, { useState } from \"react\"\n\nfunction scrollTop() {\n  if (document.body.scrollTop !== 0) {\n    document.body.scrollTop = 0\n  } else {\n    document.documentElement.scrollTop = 0\n  }\n}\nconst PaginationComponent = ({ max, list, item, noneMessage }) => {\n  const [state, setState] = useState({\n    pno: 1,\n  })\n  if (list.length === 0) {\n    return <div className=\"text-center\">{noneMessage}</div>\n  }\n\n  return (\n    <>\n      {state.pno !== 1 ? (\n        <>\n          <h6 className=\"text-primary\">Page {state.pno}</h6>\n          <hr />\n          <br />\n        </>\n      ) : null}\n\n      {list.slice((state.pno - 1) * max, (state.pno - 1) * max + max).map(item)}\n      <nav aria-label=\"Page navigation example\">\n        <ul className=\"pagination justify-content-center\">\n          <li className={`page-item ${state.pno === 1 ? \"disabled\" : \"\"}`}>\n            <button\n              className=\"page-link\"\n              onClick={() => {\n                scrollTop()\n                setState({ pno: state.pno - 1 })\n              }}\n            >\n              Previous\n            </button>\n          </li>\n          {[...Array(Math.ceil(list.length / max))].map((e, i) => (\n            <li\n              className={`page-item ${state.pno === i + 1 ? \"active\" : \"\"}`}\n              key={'a'+i}\n            >\n              <button\n                className=\"page-link\"\n                data-toggle=\"tooltip\"\n                title={`Page ${i + 1}`}\n                onClick={() => {\n                  scrollTop()\n                  setState({ pno: i + 1 })\n                }}\n              >\n                {i + 1}\n              </button>\n            </li>\n          ))}\n          <li\n            className={`page-item ${\n              state.pno === Math.ceil(list.length / max) ? \"disabled\" : \"\"\n            }`}\n          >\n            <button\n              className=\"page-link\"\n              onClick={() => {\n                scrollTop()\n                setState({ pno: state.pno + 1 })\n              }}\n            >\n              Next\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </>\n  )\n}\n\nexport default PaginationComponent\n","import { graphql, Link } from \"gatsby\"\nimport React from \"react\"\nimport Layout from \"../components/layout\"\nimport PaginationComponent from \"../components/partials/pagination\"\nimport SEO from \"../components/seo\"\n\nconst Events = ({ data, location }) => {\n  return (\n    <Layout location={location.pathname} title={\"Main\"}>\n      <SEO title=\"Events\" />\n      <main className=\"page blog-post-list\">\n        <section className=\"clean-block clean-blog-list dark\">\n          <div className=\"container\">\n            <div className=\"block-heading\">\n              <h2 className=\"text-primary\">Events @ IET NITK</h2>\n              <p>\n                We hold many events throughtout the year, here's a glimpse of it\n                all\n              </p>\n            </div>\n            <div className=\"block-content\">\n              <PaginationComponent\n                max={5}\n\n                noneMessage=\"No event reports here. Come back soon!\"\n                list={data.allFile.nodes}\n                item={(element, index) => (\n                  <div key={index} className=\"clean-blog-post\">\n                    <div className=\"row\">\n                      <div className=\"col-lg-7\">\n                        <h3>{element.childMarkdownRemark.frontmatter.title}</h3>\n                        <div className=\"info\">\n                          <span className=\"text-muted\">\n                            {element.childMarkdownRemark.frontmatter.date}\n                          </span>\n                        </div>\n                        <p>{element.childMarkdownRemark.excerpt}</p>\n                        <Link\n                          to={\"/events/\" + element.relativeDirectory}\n                          className=\"btn btn-outline-primary btn-sm\"\n                          type=\"button\"\n                        >\n                          Read More \n                        </Link>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              />\n            </div>\n          </div>\n        </section>\n      </main>\n    </Layout>\n  )\n}\n\nexport const postQuery = graphql`\n  {\n    allFile(\n      filter: { sourceInstanceName: { eq: \"events\" }, ext: { eq: \".md\" } }\n      sort: {\n        fields: childMarkdownRemark___frontmatter___date\n        order: DESC\n      }\n    ) {\n      nodes {\n        relativeDirectory\n        childMarkdownRemark {\n          excerpt(format: PLAIN)\n          frontmatter {\n            date(formatString: \"MMMM Do, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Events\n"],"sourceRoot":""}