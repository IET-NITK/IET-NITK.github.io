{"version":3,"sources":["webpack://ietnitk/./src/components/helper.js","webpack://ietnitk/./src/components/partials/pagination.js","webpack://ietnitk/./src/pages/blog.js"],"names":["RenderAuthors","arr","cls","map","index2","name","key","to","toLowerCase","split","join","length","RenderAuthorsName","className","class","RenderProjectDescription","element","len","substring","newRenderAuthors","niceFormat","replace","letter","toUpperCase","scrollTop","document","body","documentElement","max","list","item","noneMessage","filterBy","filterLabel","useState","pno","list_state","filterType","filterCategories","Set","e","state","setState","variant","id","size","ex","i","onClick","event","filter","target","slice","aria-label","Array","Math","ceil","data-toggle","title","data","location","pathname","blogs","nodes","inx","imagelink","header","childImageSharp","fixed","srcWebp","publicURL","alt","src","style","width","height","authors","date","excerpt","route","type"],"mappings":"4PAgBaA,EAAgB,SAACC,EAAKC,GAAN,OAC3BD,EAAIE,KAAI,WAAWC,GAAX,IAAGC,EAAH,EAAGA,KAAH,OACN,oCAEE,gBAAC,KAAD,CACEC,IAAK,IAAMF,EACXG,GAAI,YAAcF,EAAKG,cAAcC,MAAM,KAAKC,KAAK,KAEpDL,GAEFD,EAAS,IAAMH,EAAIU,OAChB,OACAP,EAAS,IAAMH,EAAIU,OACnB,IACA,QAIGC,EAAoB,SAACX,EAAKC,GAAN,OAC/BD,EAAIE,KAAI,WAAWC,GAAX,IAAGC,EAAH,EAAGA,KAAH,OACN,gCACE,gBAAC,KAAD,CACEQ,UAAU,YACVP,IAAK,IAAMF,EACXG,GAAI,YAAcF,EAAKG,cAAcC,MAAM,KAAKC,KAAK,KAErD,wBAAMI,MAAM,uBAAZ,IAAoCT,IAErC,QAIMU,EAA2B,SAACC,EAASC,GAChD,YAD4D,IAAZA,MAAI,KACrC,MAAXD,GAAmBA,EAAQL,QAAUM,EAChCD,EAAQE,UAAU,EAAGD,GAAO,MAE9BD,GAGIG,EAAmB,SAAClB,EAAKC,GAAN,OAC9BD,EAAIE,KAAI,WAAWC,GAAX,IAAGC,EAAH,EAAGA,KAAH,OACN,oCAEE,gBAAC,KAAD,CACEC,IAAK,IAAMF,EACXG,GAAI,YAAcF,EAAKG,cAAcC,MAAM,KAAKC,KAAK,KAEpDL,GAEFD,EAAS,IAAMH,EAAIU,OAChB,OACAP,EAAS,IAAMH,EAAIU,OACnB,IACA,QAIGS,EAAa,SAAAf,GAAI,OAC5BA,EAAKG,cAAca,QAAQ,aAAa,SAAUC,GAChD,OAAOA,EAAOC,mB,iECxElB,SAASC,IACyB,IAA5BC,SAASC,KAAKF,UAChBC,SAASC,KAAKF,UAAY,EAE1BC,SAASE,gBAAgBH,UAAY,EA4IzC,IAzI4B,SAAC,GAOtB,IANLI,EAMI,EANJA,IACAC,EAKI,EALJA,KACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,SACAC,EACI,EADJA,YAEA,GAA0BC,cAAS,CACjCC,IAAK,EACLC,WAAYP,EACZQ,WAAY,KACZC,kBAAiB,OAAK,IAAIC,IAAIV,EAAK1B,KAAI,SAAAqC,GAAC,OAAIA,EAAER,UAJzCS,EAAP,KAAcC,EAAd,KAOA,OAAID,EAAML,YAA0C,IAA5BK,EAAML,WAAWzB,OAChC,uBAAKE,UAAU,eAAekB,GAIrC,gCACGC,GAAYS,EAAML,WACjB,gBAAC,IAAD,KACE,gBAAC,WAAD,CACEvB,UAAU,OACV8B,QAAQ,kBACRC,GAAI,YAAcZ,EAClBa,KAAK,MAEJJ,EAAMJ,WAAaI,EAAMJ,WAAaJ,GAEzC,gBAAC,SAAD,KACGQ,EAAMH,kBACLG,EAAMH,iBAAiBnC,KAAI,SAAC2C,EAAIC,GAAL,OACzB,gBAAC,SAAD,CACE1C,KAAMyC,EACNxC,IAAKyC,EACLC,QAAS,SAAAC,GAAK,OACZP,EAAS,OAAD,UACHD,EADG,CAENL,WAAYP,EAAKqB,QAAO,SAAAV,GACtB,OAAOA,EAAER,KAAciB,EAAME,OAAO9C,QAEtCgC,WAAYY,EAAME,OAAO9C,UAI5ByC,MAGNL,EAAMJ,WACL,gBAAC,SAAD,CACEW,QAAS,SAAAC,GACPP,EAAS,OAAD,UACHD,EADG,CAENL,WAAYP,EACZQ,WAAY,UALlB,iBAWE,MAELI,EAAML,WAAWzB,OA1CpB,SA2CE,4BAEA,KAEW,IAAd8B,EAAMN,IACL,gCACE,sBAAItB,UAAU,gBAAd,QAAmC4B,EAAMN,KACzC,2BACA,4BAEA,KAEHM,EAAML,YACLK,EAAML,WACHgB,OAAOX,EAAMN,IAAM,GAAKP,GAAMa,EAAMN,IAAM,GAAKP,EAAMA,GACrDzB,IAAI2B,GACT,uBAAKuB,aAAW,2BACd,sBAAIxC,UAAU,qCACZ,sBAAIA,UAAS,cAA6B,IAAd4B,EAAMN,IAAY,WAAa,KACzD,0BACEtB,UAAU,YACVmC,QAAS,WACPxB,IACAkB,EAAS,OAAD,UAAMD,EAAN,CAAaN,IAAKM,EAAMN,IAAM,OAJ1C,aAUDM,EAAML,aACL,OAAIkB,MAAMC,KAAKC,KAAKf,EAAML,WAAWzB,OAASiB,KAAOzB,KAAI,SAACqC,EAAGO,GAAJ,OACvD,sBACElC,UAAS,cAAe4B,EAAMN,MAAQY,EAAI,EAAI,SAAW,IACzDzC,IAAKyC,GAEL,0BACElC,UAAU,YACV4C,cAAY,UACZC,MAAK,SAAUX,EAAI,GACnBC,QAAS,WACPxB,IACAkB,EAAS,OAAD,UAAMD,EAAN,CAAaN,IAAKY,EAAI,OAG/BA,EAAI,OAIb,sBACElC,UAAS,cACP4B,EAAML,YACNK,EAAMN,MAAQoB,KAAKC,KAAKf,EAAML,WAAWzB,OAASiB,GAC9C,WACA,KAGN,0BACEf,UAAU,YACVmC,QAAS,WACPxB,IACAkB,EAAS,OAAD,UAAMD,EAAN,CAAaN,IAAKM,EAAMN,IAAM,OAJ1C,c,sGC9BZ,UA9Fa,SAAC,GAAwB,IAAtBwB,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACpB,OACE,gBAAC,IAAD,CAAQA,SAAUA,EAASC,SAAUH,MAAO,QAC1C,gBAAC,IAAD,CAAiBA,MAAM,SACvB,wBAAM7C,UAAU,uBACd,2BAASA,UAAU,oCACjB,uBAAKA,UAAU,aACb,uBAAKA,UAAU,iBACb,sBAAIA,UAAU,gBAAd,0BACA,8FAIF,uBAAKA,UAAU,iBACb,gBAAC,IAAD,CACEe,IAAK,EACLC,KAAM8B,EAAKG,MAAMC,MACjBjC,KAAM,SAACd,EAASgD,GACd,IAAIC,EAAYjD,EAAQkD,OAAOC,iBAAmBnD,EAAQkD,OAAOC,gBAAgBC,MAAMC,QAIvF,OAHIJ,IACFA,EAAWjD,EAAQkD,OAAOI,WAG1B,uBAAKhE,IAAK0D,EAAKnD,UAAU,mBACvB,uBAAKA,UAAU,OACb,uBAAKA,UAAU,YACb,uBACE0D,IAAKvD,EAAQ0C,MACb7C,UAAU,oBACV2D,IAAKP,EACLQ,MAAO,CAAEC,MAAO,OAAQC,OAAQ,WAGpC,uBAAK9D,UAAU,YACb,sBAAIA,UAAU,mBACXG,EAAQ0C,MAAMlD,eAEjB,uBAAKK,UAAU,QACb,wBAAMA,UAAU,cAAhB,OAEGb,OACCgB,EAAQ4D,QACR,IAEF,2BACC5D,EAAQ6D,OAGb,yBAAI7D,EAAQ8D,SACZ,gBAAC,KAAD,CACEvE,GAAI,SAAWS,EAAQ+D,MAAMvE,cAC7BK,UAAU,iCACVmE,KAAK,UAHP","file":"component---src-pages-blog-js-004fabf19c954df725a8.js","sourcesContent":["import { Link } from \"gatsby\"\nimport React from \"react\"\n\nexport const redirectController = control => {\n  if (!control) {\n  }\n}\nexport const generateSIGHash = sig_images => {\n  let img_hash = {}\n  sig_images &&\n    sig_images.forEach(element => {\n      img_hash[element.name] = element.childImageSharp.fixed.srcWebp\n    })\n  return img_hash\n}\n\nexport const RenderAuthors = (arr, cls) =>\n  arr.map(({ name }, index2) => (\n    <>\n      &nbsp;\n      <Link\n        key={\"x\" + index2}\n        to={\"/members/\" + name.toLowerCase().split(\" \").join(\"\")}\n      >\n        {name}\n      </Link>\n      {index2 + 2 === arr.length\n        ? \" and\"\n        : index2 + 1 !== arr.length\n        ? \",\"\n        : \"\"}\n    </>\n  ))\n\nexport const RenderAuthorsName = (arr, cls) =>\n  arr.map(({ name }, index2) => (\n    <>\n      <Link\n        className=\"my-3 pr-3\"\n        key={\"x\" + index2}\n        to={\"/members/\" + name.toLowerCase().split(\" \").join(\"\")}\n      >\n        <span class=\"project-auther-name\">#{name}</span>\n      </Link>\n      {\"\"}\n    </>\n  ))\n\nexport const RenderProjectDescription = (element, len=100) => {\n  if (element != null && element.length >= len) {\n    return element.substring(0, len) + '...';\n  }\n  return element;\n}\n\nexport const newRenderAuthors = (arr, cls) =>\n  arr.map(({ name }, index2) => (\n    <>\n      &nbsp;\n      <Link\n        key={\"x\" + index2}\n        to={\"/members/\" + name.toLowerCase().split(\" \").join(\"\")}\n      >\n        {name}\n      </Link>\n      {index2 + 2 === arr.length\n        ? \" and\"\n        : index2 + 1 !== arr.length\n        ? \",\"\n        : \"\"}\n    </>\n  ))\n\nexport const niceFormat = name =>\n  name.toLowerCase().replace(/^\\w|\\s\\w/g, function (letter) {\n    return letter.toUpperCase()\n  })\n","import React, { useState } from \"react\"\nimport Dropdown from \"react-bootstrap/Dropdown\"\n\nfunction scrollTop() {\n  if (document.body.scrollTop !== 0) {\n    document.body.scrollTop = 0\n  } else {\n    document.documentElement.scrollTop = 0\n  }\n}\nconst PaginationComponent = ({\n  max,\n  list,\n  item,\n  noneMessage,\n  filterBy,\n  filterLabel,\n}) => {\n  const [state, setState] = useState({\n    pno: 1,\n    list_state: list,\n    filterType: null,\n    filterCategories: [...new Set(list.map(e => e[filterBy]))],\n  })\n\n  if (state.list_state && state.list_state.length === 0) {\n    return <div className=\"text-center\">{noneMessage}</div>\n  }\n\n  return (\n    <>\n      {filterBy && state.list_state ? (\n        <Dropdown>\n          <Dropdown.Toggle\n            className=\"mr-4\"\n            variant=\"outline-primary\"\n            id={\"dropdown-\" + filterBy}\n            size=\"sm\"\n          >\n            {state.filterType ? state.filterType : filterLabel}\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            {state.filterCategories &&\n              state.filterCategories.map((ex, i) => (\n                <Dropdown.Item\n                  name={ex}\n                  key={i}\n                  onClick={event =>\n                    setState({\n                      ...state,\n                      list_state: list.filter(e => {\n                        return e[filterBy] === event.target.name\n                      }),\n                      filterType: event.target.name,\n                    })\n                  }\n                >\n                  {ex}\n                </Dropdown.Item>\n              ))}\n            {state.filterType ? (\n              <Dropdown.Item\n                onClick={event => {\n                  setState({\n                    ...state,\n                    list_state: list,\n                    filterType: null,\n                  })\n                }}\n              >\n                Clear Filters\n              </Dropdown.Item>\n            ) : null}\n          </Dropdown.Menu>\n          {state.list_state.length} Items\n          <hr />\n        </Dropdown>\n      ) : null}\n\n      {state.pno !== 1 ? (\n        <>\n          <h6 className=\"text-primary\">Page {state.pno}</h6>\n          <hr />\n          <br />\n        </>\n      ) : null}\n\n      {state.list_state &&\n        state.list_state\n          .slice((state.pno - 1) * max, (state.pno - 1) * max + max)\n          .map(item)}\n      <nav aria-label=\"Page navigation example\">\n        <ul className=\"pagination justify-content-center\">\n          <li className={`page-item ${state.pno === 1 ? \"disabled\" : \"\"}`}>\n            <button\n              className=\"page-link\"\n              onClick={() => {\n                scrollTop()\n                setState({ ...state, pno: state.pno - 1 })\n              }}\n            >\n              Previous\n            </button>\n          </li>\n          {state.list_state &&\n            [...Array(Math.ceil(state.list_state.length / max))].map((e, i) => (\n              <li\n                className={`page-item ${state.pno === i + 1 ? \"active\" : \"\"}`}\n                key={i}\n              >\n                <button\n                  className=\"page-link\"\n                  data-toggle=\"tooltip\"\n                  title={`Page ${i + 1}`}\n                  onClick={() => {\n                    scrollTop()\n                    setState({ ...state, pno: i + 1 })\n                  }}\n                >\n                  {i + 1}\n                </button>\n              </li>\n            ))}\n          <li\n            className={`page-item ${\n              state.list_state &&\n              state.pno === Math.ceil(state.list_state.length / max)\n                ? \"disabled\"\n                : \"\"\n            }`}\n          >\n            <button\n              className=\"page-link\"\n              onClick={() => {\n                scrollTop()\n                setState({ ...state, pno: state.pno + 1 })\n              }}\n            >\n              Next\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </>\n  )\n}\n\nexport default PaginationComponent\n","import { graphql, Link } from \"gatsby\"\nimport React from \"react\"\nimport Layout from \"../components/layout\"\nimport SearchEngineOps from \"../components/seo\"\nimport { RenderAuthors } from \"../components/helper\"\nimport PaginationComponent from \"../components/partials/pagination\"\n\nconst Blog = ({ data, location }) => {\n  return (\n    <Layout location={location.pathname} title={\"Main\"}>\n      <SearchEngineOps title=\"Blog\" />\n      <main className=\"page blog-post-list\">\n        <section className=\"clean-block clean-blog-list dark\">\n          <div className=\"container\">\n            <div className=\"block-heading\">\n              <h2 className=\"text-primary\">Official IET-NITK Blog</h2>\n              <p>\n                We post cool stuff. Subscribe to our Newsletter to stay updated!\n              </p>\n            </div>\n            <div className=\"block-content\">\n              <PaginationComponent\n                max={5}\n                list={data.blogs.nodes}\n                item={(element, inx) => {\n                  let imagelink = element.header.childImageSharp && element.header.childImageSharp.fixed.srcWebp\n                  if(!imagelink){\n                    imagelink= element.header.publicURL\n                  }\n                  return (\n                    <div key={inx} className=\"clean-blog-post\">\n                      <div className=\"row\">\n                        <div className=\"col-lg-5\">\n                          <img\n                            alt={element.title}\n                            className=\"rounded img-fluid\"\n                            src={imagelink}\n                            style={{ width: \"100%\", height: \"auto\" }}\n                          />\n                        </div>\n                        <div className=\"col-lg-7\">\n                          <h3 className=\"text-capitalize\">\n                            {element.title.toLowerCase()}\n                          </h3>\n                          <div className=\"info\">\n                            <span className=\"text-muted\">\n                              By&nbsp;\n                              {RenderAuthors(\n                                element.authors,\n                                \"\"\n                              )}\n                              <br />\n                              {element.date}\n                            </span>\n                          </div>\n                          <p>{element.excerpt}</p>\n                          <Link\n                            to={\"/blog/\" + element.route.toLowerCase()}\n                            className=\"btn btn-outline-primary btn-sm\"\n                            type=\"button\"\n                          >\n                            Read More\n                          </Link>\n                        </div>\n                      </div>\n                    </div>\n                  )\n                }}\n              />\n            </div>\n          </div>\n        </section>\n      </main>\n    </Layout>\n  )\n}\n\nexport const postQuery = graphql`\n  {\n    blogs: allStrapiBlogs(sort: { fields: date, order: DESC }) {\n      nodes {\n        date(formatString: \"MMMM Do, YYYY\")\n        excerpt\n        title\n        route\n        header {\n          childImageSharp {\n            fixed {\n              srcWebp\n            }\n          }\n          publicURL\n        }\n        authors {\n          name\n        }\n      }\n    }\n  }\n`\n\nexport default Blog\n"],"sourceRoot":""}